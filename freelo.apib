FORMAT: 1A
HOST: https://api.freelo.io/v1/

# Freelo API v1

API documentation for [Freelo.io](https://www.freelo.io).

## Request format

All request point to URL that begins with `https://api.freelo.io/v1/`.


Each request must include a User-Agent HTTP header.

### Example: projects list

```
curl -u your@email.tld:API_KEY -H 'User-Agent: Your_App_Id (email@company.tld)' \
    https://api.freelo.io/v1/projects
```

Your_App_Id is not any defined value. Please enter what best describes the purpose of using the API. If you do not know what to enter, then your name will suffice.

## Response format

The API only supports JSON format in UTF-8 encoding.

## Authentication

Authentication is done using HTTP Basic Authentication. As your username, type your email to log in to Freelo, and use the API key as a password. You can find API key in [settings](https://app.freelo.io/profil/nastaveni).

## HTTP status codes - handling errors

Check response HTTP status code to check if everything was ok.

If there is an error on our side, reponse code will be `5xx`. If no source is found or the action is rejected for another reason, the code will be `4xx`.

If everything is ok, the code will be '200'.

### Rate limiting (429 Too Many Requests)

You can perform up to 25 requests per minute. If you exceed this limit 429 Too Many Requests HTTP status code will be returned. You have to wait at least 60 seconds before  you send another request.

## Currencies format

All currencies amount must be strings with exactly 2 decimal places multiplied by 100.

Only these currencies iso codes are supported:
* CZK
* EUR
* USD

Example for en_us:
```
1,000.25 = "100025"
1,000 = "100000"
```

Example for cs_cz:
```
1 000,25 = "100025"
1 000 = "100000"
1 = "100"
```

Result currency object will be always with 2 keys - amount and currency iso code:
```
{
    "amount": "100",
    "currency": "USD"
}
```

## Paginated response format

Pages are set via GET parameter `p` starting from 0 (p=0 is default and always first page).

Example:
```
/api/v1/archived-projects?p=1
```

Response is:
```
{
    "total": 125,
    "count": 25,
    "page": 1,
    "per_page": 100,
    "data": {â€¦}
}
```



## Order response data

You can order data in many URL addresses in this API. Ordering is set via GET parameters `order_by` and `order`.

Parameter `order` can be `asc` or `desc` for ascending or descending order. 

Ordering column is in parameter `order_by`. In REFERENCE section are allowed values for `order_by` parameter in each address where you can order data.


Example:
```
/api/v1/projects?order_by=name&order=asc
```

## Testing

For API testing, you can use the console here directly on Apiary, but we recommend using [Postman] (https://www.getpostman.com/).


## Create task with special URL

You can simplify creating new task using special URL address. On this address is window with all information about new task. You can preset information with URL parameters.

URL address always begin with
```
https://app.freelo.io/?createTask=true
```

### URL parameters

 + `createTask` - Required parameter. The value must be `true` 
 + `pid` - ID for the project which new task wil be added to. Optional parameter. 
 + `tlid` - ID for the tasklist which new task wil be added to (it can be use only with `pid` parameter). Optional parameter. 
 + `tt` - Task name. Optional parameter.
 + `tc` - Task content. Optional parameter. 
 + `st[]` - Subtasks names. Optional parameter. 
 + `td` - Task due dates. Optional parameter. 
 
Valid formats for `td` parameter:

 + `Y-m-d` - Due date without time (2021-10-04)
 + `Y-m-dTH:i` - Due date with time  (2021-10-04T20:45)
 + `Y-m-dTH:i_Y-m-dTH:i` - Date range from_to  (2021-10-03T20:45_2021-10-04T12:00)
 + `3` - Floating due date (now + 3 days)
 + `3:5` - Floating date range from:to (from now + 3 days to now + 5 days)

### Examples
 
#### Task with name and content

https://app.freelo.io/?createTask=true&tt=My+task&tc=My+Content

This URL is for creating task with name "My task" and content "My content".
 
#### Task with subtasks

https://app.freelo.io/?createTask=true&st[0]=My+first+subtask&st[1]=My+second+subtask

This URL is for creating task with two subtasks.

#### Task with due date

https://app.freelo.io/?createTask=true&td=2021-10-04T14:13

This URL is for creating task with date_to = 2021-10-04 14:13

#### Task with due dates

https://app.freelo.io/?createTask=true&td=2021-09-30T20:45_2021-10-04T12:00

This URL is for creating task with date_from = 2021-09-30 20:45 and date_to = 2021-10-04 12:00

#### Task with floating due date

https://app.freelo.io/?createTask=true&td=5

This URL is for creating task with date_to calculated from now.
For example if we call URL at 2021-10-04, date_from wil be 5 days later (2021-10-09)

#### Task with floating due dates

https://app.freelo.io/?createTask=true&td=7:10

This URL is for creating task with date_from and date_to calculated from now.
For example if we call URL at 2021-10-04, date_from wil be 7 days later (2021-10-11) and date_to will be 10 days later (2021-10-14).

#### Redirection after task creation

https://app.freelo.io/?createTask=true&r=t

Redirect to the task detail page after creation.

https://app.freelo.io/?createTask=true&r=tl

Redirect to the tasklist detail page after creation.

# Group Projects


## Projects collection [/projects]

### Create project [POST]

+ Request (application/json)

    + Attributes
        + project (object, required)
            + name: Write PR article (string, required) - Name of the project
            + currency_iso: `CZK` (string, required) - [ CZK | EUR | USD ]
            + project_owner_id: 125 (number) - ID of user assigned as owner 

    + Body

            {
                "name": "Vegetable growing",
                "currency_iso": "CZK",
                "project_owner_id": 125
            }

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 4955 (number) - ID of the project
            + name: Write PR article (string) - Name of the project

    + Body 

            {
                "id": 25,
                "name": "Vegetable growing"
            }

### Collection of all own (active) projects including active tasklists [GET /projects?order_by=name&order=asc]

+ Parameters
    + `order_by` (string, optional) - Order column [name|date_add|date_edited_at]
        + Default: name
    + order (string, optional) - Order direction [asc|desc]
        + Default: asc

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 132 (number) - ID of the project
            + name: Project name (string) - Name of the project
            + date_add: `2021-05-12T15:22:51+02:00` (string) - Date of adding project in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing project in ISO 8601 format
            + tasklists (array) - Array of active tasklists
                + (object)
                    + id: 426 (number) - ID of the tasklist
                    + name: Marketing (string) - Name of the tasklist
            + client (object)
                + id: 12 (number) - ID of client
                + email: client@domain.tld (string)
                + name: John Davis (string)
                + company: Company ltd. (string)
                + company_id: 01234567 (string)
                + company_tax_id: CZ01234567 (string)
                + street: Main Street 123 (string)
                + town: Anytown (string)
                + zip: 17101 (string)

    + Body 

            [
                {
                    "id": 132,
                    "name": "Project name",
                    "date_add": "2021-05-12T15:22:51+02:00",
                    "date_edited_at": "2021-10-04T09:32:00+02:00",
                    "tasklists": [
                        {
                            "id": 426,
                            "name": "Marketing"
                        }
                    ],
                    "client": {
                        "id": 12,
                        "email": "client@domain.tld",
                        "name": "John Davis",
                        "company": "Company ltd.",
                        "company_id": "01234567",
                        "company_tax_id": "CZ01234567",
                        "street": "Main Street 123",
                        "town": "Anytown",
                        "zip": "17101"
                    }
                }
            ]


        
## All projects collection [/all-projects?order_by=date_add&order=asc&tags[0]=mytag&states_ids[0]=2&users_ids[0]=111&created_in_range[date_from]=2023-05-01&created_in_range[date_to]=2023-10-01]

### Paginated collection of all (owned and invited) projects [GET]

+ Parameters
    + `order_by` (string, optional) - Order column [name|date_add|date_edited_at]
        + Default: date_add
    + order (string, optional) - Order direction [asc|desc]
        + Default: asc
    + tags (array, optional) - Only projects tagged by one of those tags. Keyword "without" is used to get projects without any tags, but cannot be used together with other tags.
    + states_ids (array, optional) - Specify states of projects [1 - active | 2 - archived | 3 - template]
        + Default: [1, 2]
    + users_ids (array, optional) - Specify ids of project owners.
    + created_in_range (array, optional) - Specify range for date_add.

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 69 (number) - ID of the project
            + name: Main product project (string) - Name of the project
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding project in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing project in ISO 8601 format
            + owner (object) - task author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - Fullname of the task author
            + state (object) - project state
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + minutes_budget: 3000 (number, nullable) - Minutes budget on project
            + budget (object, nullable) - project budget
                + amount: 50000 (number) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + real_minutes_spent: 10 (number) - number of minutes real spent on project
            + real_cost (object) - real cost on project
                + amount: 20000 (number) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
    
    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "projects": [
                        {
                            "id": 69,
                            "name": "Main product project",
                            "date_add": "2021-10-03T15:00:00+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "owner": {
                                "id": 2,
                                "fullname": "Captain Freelo"
                            },
                            "state": {
                                "id": 1,
                                "state": "active"
                            },
                            "minutes_budget": 3000,
                            "budget": {
                                "amount": 50000,
                                "currency": "CZK"
                            },
                            "real_minutes_spent": 45,
                            "real_cost": {
                                "amount": 20000,
                                "currency": "CZK"
                            }
                        }
                    ]
                }
            }
            

## Invited projects collection [/invited-projects]

### Paginated collection of all invited projects [GET]

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 69 (number) - ID of the project
            + name: Main product project (string) - Name of the project
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding project in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing project in ISO 8601 format
            + tasklists (array) - Array of active tasklists
                + (object)
                    + id: 426 (number) - ID of the tasklist
                    + name: Marketing (string) - Name of the tasklist

    + Body 

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "invited_projects": [
                        {
                            "id": 69,
                            "name": "Main product project",
                            "date_add": "2021-10-03T15:00:00+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "tasklists": [
                                {
                                    "id": 426,
                                    "name": "Marketing"
                                }
                            ]
                        }
                    ]
                }
            }

## Archived projects collection [/archived-projects]

### Paginated collection of all archived projects [GET]

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 69 (number) - ID of the project
            + name: Main product project (string) - Name of the project
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding project in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing project in ISO 8601 format
            + tasklists (array) - Array of active tasklists
                + (object)
                    + id: 426 (number) - ID of the tasklist
                    + name: Marketing (string) - Name of the tasklist
            + client (object, nullable)
                + id: 12 (number) - ID of client
                + email: client@domain.tld (string)
                + name: John Davis (string)
                + company: Company ltd. (string)
                + company_id: 01234567 (string)
                + company_tax_id: CZ01234567 (string)
                + street: Main Street 123 (string)
                + town: Anytown (string)
                + zip: 17101 (string)

    + Body 

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "archived_projects": [
                        {
                            "id": 69,
                            "name": "Main product project",
                            "date_add": "2021-10-03T15:00:00+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "tasklists": [
                                {
                                    "id": 426,
                                    "name": "Marketing"
                                }
                            ]
                        },
                        "client": {
                            "id": 12,
                            "email": "client@domain.tld",
                            "name": "John Davis",
                            "company": "Company ltd.",
                            "company_id": "01234567",
                            "company_tax_id": "CZ01234567",
                            "street": "Main Street 123",
                            "town": "Anytown",
                            "zip": "17101"
                        }
                    ]
                }
            }

## Template projects collection [/template-projects?order_by=date_add&order=asc&tags[]=mytag&users_ids[]=111&created_in_range[date_from]=2021-05-01&created_in_range[date_to]=2021-11-01]

### Paginated collection of all template projects [GET]

+ Parameters
    + `order_by` (string, optional) - Order column [name|date_add|date_edited_at]
        + Default: date_add
    + order (string, optional) - Order direction [asc|desc]
        + Default: asc
    + tags (array, optional) - Only projects tagged by one of those tags. Keyword "without" is used to get projects without any tags, but cannot be used together with other tags.
    + users_ids (array, optional) - Specify ids of project owners.
    + created_in_range (array, optional) - Specify range for date_add.

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 69 (number) - ID of the project
            + name: Main product project (string) - Name of the project
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding project in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing project in ISO 8601 format
            + tasklists (array) - Array of active tasklists
                + (object)
                    + id: 426 (number) - ID of the tasklist
                    + name: Marketing (string) - Name of the tasklist

    + Body 

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "template_projects": [
                        {
                            "id": 69,
                            "name": "Main product project",
                            "date_add": "2021-10-03T15:00:00+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "tasklists": [
                                {
                                    "id": 426,
                                    "name": "Marketing"
                                }
                            ]
                        }
                    ]
                }
            }
        
## Users projects collection [/user/{user_id}/all-projects?states_ids[]=1&order_by=date_add&order=desc]

+ Parameters
    + user_id (number) - ID of the user
    
### Paginated collection of users projects [GET]

+ Parameters
    + states_ids (number, optional) - States ids in array. Values 1 (active), 2 (archived) and 3 (template) are allowed
    + `order_by` (string, optional) - Order column [name|date_add|date_edited_at]
        + Default: date_add
    + order (string, optional) - Order direction [asc|desc]
        + Default: desc

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 69 (number) - ID of the project
            + name: Main product project (string) - Name of the project
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding project in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing project in ISO 8601 format
            + owner (object) - task author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - Fullname of the task author
            + state (object) - project state
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
    
    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "projects": [
                        {
                            "id": 69,
                            "name": "Main product project",
                            "date_add": "2021-10-03T15:00:00+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "owner": {
                                "id": 2,
                                "fullname": "Captain Freelo"
                            },
                            "state": {
                                "id": 1,
                                "state": "active"
                            }
                        }
                    ]
                }
            }

## Project workers collection [/project/{project_id}/workers]

+ Parameters
    + project_id (number) - ID of the project

### Paginated collection of all project workers [GET]

+ Response 200 (application/json)

    + Attributes
        + worker (object)
            + id: 69 (number)
            + fullname: John Newman (string)

    + Body 

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "workers": [
                        {
                            "id": 69,
                            "fullname": "John Newman"
                        }
                    ]
                }
            }

## Archive project [/project/{project_id}/archive]

+ Parameters
    + project_id (number) - ID of the project

### Archive project [POST]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }

## Activate project [/project/{project_id}/activate]

+ Parameters
    + project_id (number) - ID of the project

### Activate project [POST]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }

## Project [/project/{project_id}]

+ Parameters
    + project_id (number) - ID of the project

### Get project [GET]

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 1 (number)
            + name: Project name (string)
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding project in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing project in ISO 8601 format
            + state (object) - task state
                + id: 1 (number) - ID of state
                + state: active (string) - string representation of state
            + tasklists (array)
                + (object)
                    + id: 1 (number)
                    + name: tasklist name (string)
                    + tasks (array)
                        + (object)
                            + id: 2 (number)
                            + name: task name (string)
                            + due_date: `2020-04-23 00:00:00` (string) - Due date of task in ISO 8601 format
                            + due_date_end: `2020-04-24 00:00:00` (string) - Due date end of task in ISO 8601 format
                            + worker (object)
                                + id: 1 (number) - ID of the worker
                                + fullname: John Newman (string) - Name of the user
                            + parent_task_id: 1 (number, nullable) - ID of parent task if the task is subtask, null otherwise
            + minutes_budget: 3000 (number, nullable) - Minutes budget on project
            + budget (object, nullable) - project budget
                + amount: 50000 (number) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + real_minutes_spent: 45 (number) - number of minutes real spent on project
            + real_cost (object) - real cost on project
                + amount: 20000 (number) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + workers (array)
                + (object)
                    + id: 3 (number) - ID of the worker
                    + fullname: Worker Name (string) - Name of the user
                    + hour_rate: (object, nullable) - Worker hour rate if API user has access to it, null otherwise
                        + amount: 100000 (number) - currency amount
                        + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
                        + is_fixed: true (boolean) - Is hour rate fixed
                    

    + Body

            {
                "id": 1,
                "name": "Project name",
                "date_add": "2021-10-03T15:00:00+02:00",
                "date_edited_at": "2021-10-04T09:32:00+02:00",
                "state": {
                    "id": 1,
                    "state": "active",
                },
                "tasklists": [
                    {
                        "id": 1,
                        "name": "tasklist name",
                        "tasks": [
                            {
                                "id": 2,
                                "name": "task name",
                                "due_date": "2020-04-23 00:00:00",
                                "due_date_end": "2020-04-24 00:00:00",
                                "worker": {
                                    "id": 1,
                                    "fullname": "John Newman"
                                },
                                "parent_task_id": 1
                            }
                        ]
                    }
                ],
                "minutes_budget": 3000,
                "budget": {
                    "amount": 50000,
                    "currency": "CZK"
                },
                "real_minutes_spent": 45,
                "real_cost": {
                    "amount": 20000,
                    "currency": "CZK"
                },
                "workers": [
                    {
                        "id": 3,
                        "fullname": "Worker Name",
                        "hour_rate": {
                            "amount": 100000,
                            "currency": "CZK",
                            "is_fixed": false
                        }
                    },
                                        {
                        "id": 4,
                        "fullname": "John Doe",
                        "hour_rate": null
                    }
                ]
            }

### Delete project [DELETE]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
        
        
## Remove project workers [/project/{project_id}/remove-workers]

+ Parameters
    + project_id (number) - ID of the project

### Remove project workers by IDs [POST /project/{project_id}/remove-workers/by-ids]

+ Request (application/json)

    + Attributes
        + users_ids (array[number], required) - Workers by ID to remove from the project

    + Body

            {
                "users_ids": [
                    305,
                    150,
                    820
                ]
            }

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
        
### Remove project workers by emails [POST /project/{project_id}/remove-workers/by-emails]

+ Request (application/json)

    + Attributes
        + users_emails (array[string], required) - Workers by email to remove from the project

    + Body

            {
                "users_emails": [
                    "user1@freelo.io",
                    "user2@freelo.io"
                ]
            }

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
        
        
## Project from template [/project/create-from-template/{template_id}]
        
+ Parameters
    + template_id (number) - ID of the template


### Create project from template [POST]

+ Request (application/json)

    + Attributes
        + project (object, required)
            + name: Write PR article (string) - Name of the project
            + project_owner_id: 7566 (number) - ID of the project's owner
            + currency_iso: `CZK` (string) - [ CZK | EUR | USD ]
            + preset_date_from: `2021-11-08` (string)  - Date to set floating due dates in templates
            + general_settings (object, optional)
                + layout: `rows` (string) - [rows | kanban] - Layout of the project. Default: `rows`
            + users_ids (array) - Users from template to invite.

    + Body

            {
                "name": "Vegetable growing",
                "project_owner_id": 7566,
                "currency_iso": "CZK",
                "preset_date_from": "2021-11-08",
                "general_settings": {
                    "layout": "kanban"
                },
                "users_ids": [745, 6523]
            }

+ Response 200 (application/json)

    + Attributes
        + project (object)
            + id: 4955 (number) - ID of the project
            + name: Write PR article (string) - Name of the project
            + owner (object)
                + id: 7566 (number) - ID of the project's owner
                + fullname: "John Doe" (string) - Name of the project's owner
            + currency_iso: `CZK` (string) - [ CZK | EUR | USD ]

    + Body 

            {
                "id": 25,
                "name": "Vegetable growing",
                "owner": {
                    "id": 7566,
                    "fullname": "John Doe"
                },
                "currency_iso": "CZK",
            }


# Group Project labels


## Project labels collection [/project-labels/find-available]

### Find available labels [GET]

+ Response 200 (application/json)

    + Attributes
        + label (object)
            + id: 4955 (number) - ID of the label
            + name: "Task label" (string)
            + color: #f2830b (string)
            + is_private: true (bool)
            + users_id: 5421 (number) - owner of the label
            + usage_count: 10 (number)
            + can_be_public: true (bool) - can be label make as public? (public label can be only on projects that belongs to one owner)
            + can_be_edited: true (bool) - is user allowed to edit the label?

    + Body 

            {
                "label": [
                    {
                        "id": 3,
                        "name": "Management",
                        "color": null,
                        "is_private": true,
                        "users_id": 11,
                        "usage_count": 0,
                        "can_be_public": true,
                        "can_be_edited": true
                    }
                ]
            }

## Project label [/project-labels/{labelId}]

### Edit label [POST]

+ Request (application/json)

    + Attributes
        + label (object, required)
            + name: "Task label" (string)
            + color: #f2830b (string)
            + is_private: true (bool)

    + Body

            {
                "name": "Management",
                "color": "#77787a",
                "is_private": true
            }

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }

### Delete label [DELETE]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
            
## Add project label to project [/project-labels/add-to-project/{projectId}]
            
### Add project label to project [POST]

Create new project label when label with specific name and color not found.

+ Parameters
    + project_id (number) - ID of the project

+ Request (application/json)

    + Attributes
        + labels (array, required) - Task labels data
            + (object)
                + name: "Label text" (string, optional) - Text shown in label
                + color: #15acc0 (string, optional) - Color of label (accepts only colors supported by us, is ignored without name)
                + is_private: true (bool, optional)
                + id: 1452 (number, optional) - id of existing label

    + Body


        {
            "name": "tag - edited",
            "color": "#10aa40",
            "is_private": false
        }


+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
            
## Remove project label from project [/project-labels/remove-from-project/{projectId}]
            
### Remove project label from project [POST]

Label can be defined by id or by data (name, color, is_private)

+ Parameters
    + project_id (number) - ID of the project

+ Request (application/json)

    + Attributes
        + labels (array, required) - Task labels data
            + (object)
                + name: "Label text" (string, optional) - Text shown in label
                + color: #15acc0 (string, optional) - Color of label (accepts only colors supported by us, is ignored without name)
                + is_private: true (bool, optional)
                + id: 1452 (number, optional) - id of existing label

    + Body


        {
            "name": "tag - edited",
            "color": "#10aa40",
            "is_private": false
        }


+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
            
# Group Pinned items


## Pinned items collection [/project/{project_id}/pinned-items]

+ Parameters
    + project_id (number) - ID of the project


### Find all pinned item in project [GET]

+ Response 200 (application/json)

    + Attributes
        + id: 69 (number)
        + link: https://www.freelo.io (string)
        + title: Project and task management application (string)

    + Body 

            [
                {
                    "id": 98,
                    "link": "https://www.freelo.io",
                    "title": "Project and task management application"
                }
            ]


### Pin item to project [POST]

+ Request (application/json)

    + Attributes
        + link: https://www.freelo.io (string, required)
        + title: Project and task management application (string)

    + Body

            {
                "link": "https://www.freelo.io",
                "title": "Project and task management application"
            }

+ Response 200 (application/json)

    + Attributes
        + id: 98 (number)
        + link: https://www.freelo.io (string)
        + title: Project and task management application (string)

    + Body 

            {
                "id": 98,
                "link": "https://www.freelo.io",
                "title": "Project and task management application"
            }


## Pined item [/pinned-item/{pinned_item_id}]

+ Parameters
    + pinned_item_id (number) - ID of the pinned item


### Delete pinned item in project [DELETE]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }


# Group Tasklists

## Tasklists collection [/project/{project_id}/tasklists]

+ Parameters
    + project_id (number) - ID of the project

### Create tasklist [POST]

+ Request (application/json)

    + Attributes
        + tasklist (object, required)
            + name: Water the plants (string, required) - Name of the task
            + budget: `1025` (string) - currency amount in string format \(2 decimal places with no decimal separator, ie. 1.05 = '105'\)

    + Body

            {
                "name": "Water the plants",
                "budget": "1025"
            }

+ Response 200 (application/json)

    + Attributes
        + tasklist (object)
            + id: 98 (number) - ID of the tasklist
            + name: Water the plants (string) - Name of the tasklist
            + budget (object)
                + amount: 1025 (string) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]

    + Body 

            {
                "id": 98,
                "name": "Water the plants",
                "budget": {
                    "amount": "1025",
                    "currency": "CZK"
                }
            }
            
## All tasklists collection [/all-tasklists?projects_ids[]=1&order_by=date_add&order=asc]  

### Paginated collection of all tasklists [GET]

+ Parameters
    + projects_ids (array, optional) - Projects ids in array
    + `order_by` (string, optional) - Order column [name|date_add|date_edited_at]
        + Default: date_add
    + order (string, optional) - Order direction [asc|desc]
        + Default: asc

+ Response 200 (application/json)

    + Attributes
        + tasklist (object)
            + id: `98` (number) - ID of the tasklist
            + name: `Water the plants` (string) - Name of the tasklist
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding tasklist in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing tasklist in ISO 8601 format
            + state (object) - tasklist state
                + id: `1` (number) - ID of state
                + state: `active` (string) - string representation of state
            + project (object)
                + id: `88` (number) - ID of the project
                + name: `My Project` (string) - Name of the project
                + state (object) - project state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + real_minutes_spent: 10 (number) - number of minutes real spent on tasklist
            + budget (object) - tasklist budget
                + amount: 50000 (number) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + real_cost (object) - real cost on tasklist
                + amount: 20000 (number) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            

    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "tasklists": [
                        {
                            "id": 98,
                            "name": "Water the plants",
                            "date_add": "2021-10-03T15:00:00+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "state": {
                                "id": 1,
                                "state": "active"
                            },
                            "project": {
                                "id": 88,
                                "name": "My Project",
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            },
                            "real_minutes_spent": 10,
                            "budget": {
                                "amount": 50000,
                                "currency": "CZK"
                            },
                            "real_cost": {
                                "amount": 20000,
                                "currency": "CZK"
                            }
                        }
                    ]
                }
            }

## Assignable workers collection [/project/{project_id}/tasklist/{tasklist_id}/assignable-workers]

+ Parameters
    + project_id (number) - ID of the project
    + tasklist_id (number) - ID of the tasklist

### Find all assigned workers for tasklist [GET]

Get all workers that have acces to tasklist

+ Response 200 (application/json)

    + Attributes
        + worker (object)
            + id: 5836 (number) - ID of the worker
            + fullname: John Newman (string) - Name of the user

    + Body 

            [
                {
                    "id": 5836,
                    "fullname": "John Newman"
                }
            ]

## Tasklist [/tasklist/{tasklist_id}]

### Get tasklist [GET]

+ Response 200 (application/json)

    + Attributes
        + tasklist (object)
            + id: 1 (number)
            + name: tasklist name (string)
            + date_add: `2021-10-03T15:00:00+02:00` (string) - Date of adding tasklist in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing tasklist in ISO 8601 format
            + tasks (array)
                + (object)
                    + id: 2 (number)
                    + name: task name (string)
                    + due_date: `2020-04-23 00:00:00` (string) - Due date of task in ISO 8601 format
                    + due_date_end: `2020-04-24 00:00:00` (string) - Due date end of task in ISO 8601 format
                    + worker (object)
                        + id: 1 (number) - ID of the worker
                        + fullname: John Newman (string) - Name of the user
                    + parent_task_id: 1 (number, nullable) - ID of parent task if the task is subtask, null otherwise

    + Body

            {
                "id": 1,
                "name": "tasklist name",
                "date_add": "2021-10-03T15:00:00+02:00",
                "date_edited_at": "2021-10-04T09:32:00+02:00",
                "tasks": [
                    {
                        "id": 2,
                        "name": "task name",
                        "due_date": "2020-04-23 00:00:00",
                        "due_date_end": "2020-04-24 00:00:00",
                        "worker": {
                            "id": 1,
                            "fullname": "John Newman"
                        },
                        "parent_task_id": 1
                    }
                ]
            }
            
## Tasklist from template [/tasklist/create-from-template/{template_id}]

+ Parameters
    + template_id (number) - ID of the template

### Create tasklist from template [POST]

+ Request (application/json)

    + Attributes
        + tasklist (object, required)
            + tasklist_id: 62 (number, required) - ID of the tasklist from template
            + target_project_id (number) - ID of the target project
            + target_tasklist_id (number) - ID of the tasklist project
            + preset_date_from: `2021-11-08` (string)  - Date to set floating due dates in templates
            + users_ids (array) - Users from template to invite.

    + Body

            {
                "tasklist_id": 62,
                "target_project_id": 6,
                "target_tasklist_id": 23,
                "preset_date_from": "2021-11-08",
                "users_ids": [745, 6523]
            }

+ Response 200 (application/json)

    + Attributes
        + tasklist (object)
            + id: 25 (number) - ID of the tasklist
            + name: "My Tasklist" (string) - Name of the tasklist
            + tasks (array) - Array of tasks
                + (object)
                    + id: 90 (number) - ID of the task
                    + name: "My Task" (string) - Name of the task

    + Body 

            {
                "id": 25,
                "name": "My Tasklist",
                "tasks": [
                    {
                        "id": 90,
                        "name": "My Task"
                    }
                ]
            }

# Group Tasks

Attribute `date_edited_at` will be updated in the following cases:
- change of followers,
- change of worker,
- add/remove/complete a subtask,
- complete/delete the task,
- priority change,
- label change,
- editing the name of the task,
- move task to another tasklist,
- add/remove/edit comment on the task
        
## Tasks collection [/project/{project_id}/tasklist/{tasklist_id}/tasks]

+ Parameters
    + project_id (number) - ID of the project
    + tasklist_id (number) - ID of the tasklist

### Create task [POST]
For adding inline file to comment content with caption see [Upload file](/reference/files/file/upload-file)

+ Request (application/json)

    + Attributes
        + task (object, required)
            + name: Write PR article (string, required) - Name of the task
            + due_date: `2016-08-10T08:00:00+0200` (string) - Due date of task in ISO 8601 format
            + due_date_end: `2016-09-10T08:00:00+0200` (string) - Due date end of task in ISO 8601 format
            + worker (number) - ID of assigned worker
            + priority_enum: task priority [h, m, l] (string)
            + comment (object, optional)
                + content: There are... (string, required) - Comment content
            + labels (array) - Array of labels
                + (object)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + tracking_users_ids (array) - array of IDs of the followers
            + turn_off_authors_tracking (boolean, optional) - do not add author (owner of api credentials) as tracking user. Default: false
            + subtasks (array, optional) - array of subtasks
                + (object)
                    + name: Write PR article (string, required) - Name of the subtask
                    + due_date: `2016-08-10T08:00:00+0200` (string) - Due date of subtask in ISO 8601 format
                    + due_date_end: `2016-09-10T08:00:00+0200` (string) - Due date end of subtask in ISO 8601 format
                    + worker: 4857 (number) - ID of assigned worker
                    + priority_enum: task priority [h, m, l] (string)
                    + comment (object, optional)
                        + content: There are... (string, required) - Comment content
                    + labels (array) - Array of labels
                        + (object)
                            + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                            + name: in progress (string)
                            + color: #f2830b (string)
                    + tracking_users_ids (array) - array of IDs of the followers

    + Body

            {
                "name": "Write PR article",
                "due_date": "2016-08-10T08:00:00+0200",
                "due_date_end": "2016-09-10T08:00:00+0200",
                "worker": 5836,
                "priority_enum": "h",
                "comment": {
                    "content": "There are ..."
                },
                "labels": [
                    {
                        "name": "In progress",
                        "color": "#f2830b"
                    }
                ],
                "tracking_users_ids": [875],
                "turn_off_authors_tracking": false,
                "subtasks": [
                    {
                        "name": "Write anotation",
                        "due_date": "2016-08-10T08:00:00+0200",
                        "due_date_end": null,
                        "worker": 5836,
                        "priority_enum": "m",
                        "comment": {
                            "content": "There are ..."
                        },
                        "labels": [
                            {
                                "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                                "name": "In progress",
                                "color": "#f2830b"
                            }
                        ],
                        "tracking_users_ids": []
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add: `2016-08-10T08:19:46+0200` (string) - Date of adding task in ISO 8601 format
            + due_date: `2017-10-10T15:00:00+02:00` (string) - Due date of task in ISO 8601 format
            + due_date_end: `2017-10-11T00:00:00+02:00` (string) - Due date end of task in ISO 8601 format
            + worker (object)
                + id: 875 (number) - ID of the worker
                + fullname: "John Doe" (string) - Name of the worker
            + priority_enum: `h` (string)
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + tracking_users (array) - Array of followers
                + (object)
                    + id: 875 (number) - ID of the user
                    + fullname: "John Doe" (string) - Name of the user
            + comment (object, optional)
                + content: There are... (string, required) - Comment content
            + subtasks (array) - Array of subtasks
                + (object)
                    + id: 3820 (number) - ID of the subtask
                    + task_id: 4955 (number) - ID of the smart task representing this subtask
                    + name: Write anotation (string) - Name of the subtask
                    + date_add: `2016-08-10T08:19:46+0200` (string) - Date of adding subtask in ISO 8601 format
                    + due_date: `2017-10-10T15:00:00+02:00` (string) - Due date of subtask in ISO 8601 format
                    + due_date_end: `2017-10-11T00:00:00+02:00` (string) - Due date end of subtask in ISO 8601 format
                    + worker (object)
                        + id: 875 (number) - ID of the worker
                        + fullname: "John Doe" (string) - Name of the worker
                    + priority_enum: `m` (string)
                    + labels (array) - Array of labels
                        + (object)
                            + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                            + name: in progress (string)
                            + color: #f2830b (string)
                    + tracking_users (array) - Array of followers
                        + (object)
                            + id: 875 (number) - ID of the user
                            + fullname: "John Doe" (string) - Name of the user
                    + comment (object, optional)
                        + content: There are... (string, required) - Comment content
                    

    + Body 

            {
                "id": 4955,
                "name": "Write PR article",
                "date_add": "2016-08-10T08:19:46+0200",
                "due_date": "2017-10-10T15:00:00+02:00",
                "due_date_end": "2017-10-11T00:00:00+02:00",
                "priority_enum": "h",
                "worker": {
                    "id": 5836,
                    "fullname": "John Newman"
                },
                "labels": [
                    {
                        "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                        "name": "In progress",
                        "color": "#f2830b"
                    }
                ],
                "tracking_users": [
                    {
                        "id": 875,
                        "name": "John Doe"
                    }
                ],
                "subtasks": [
                    {
                        "id": 4955,
                        "name": "Write anotation",
                        "date_add": "2016-08-10T08:19:46+0200",
                        "due_date": "2017-10-10T15:00:00+02:00",
                        "due_date_end": "2017-10-11T00:00:00+02:00",
                        "priority_enum": "m",
                        "worker": {
                            "id": 5836,
                            "fullname": "John Newman"
                        },
                        "labels": [
                            {
                                "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                                "name": "In progress",
                                "color": "#f2830b"
                            }
                        ],
                        "tracking_users": []
                    }
                ]
            }

### Tasks in tasklist [GET /project/{project_id}/tasklist/{tasklist_id}/tasks?order_by=priority&order=asc]

+ Parameters
    + `order_by` (string, optional) - Order column [priority|name|date_add|date_edited_at]
        + Default: priority
    + order (string, optional) - Order direction [asc|desc]
        + Default: asc

+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add: `2021-08-04T07:33:47+0200` (string) - Date of adding task in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing task in ISO 8601 format
            + due_date: null (string) - Due date of task in ISO 8601 format
            + due_date_end: null (string) - Due date end of task in ISO 8601 format
            + count_comments: 1 (number) - Number of comments in the task
            + count_subtasks: 1 (number) - Number of subtasks in the task
            + author (object) - task author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - Fullname of the task author
            + worker (object)
                + id: 1 (number) - ID of the worker
                + fullname: Karel Borkovec (string) - Fullname of the worker
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + parent_task_id: 4900 (number, nullable) - ID of parent task if the task is subtask, null otherwise
            + total_time_estimate (object)
                + minutes: 50 (number) - Number of total estimated minutes
            + user_time_estimates (array) - Array of worker time estimates
                + (object)
                    + minutes: 50 (number) - Estimated minutes for the worker
                    + user (object)
                        + id: 1 (number) - ID of the worker
                        + fullname: Karel Borkovec (string) - Fullname of the worker

    + Body 

            [
                {
                    "id": 4955,
                    "name": "Write PR article",
                    "date_add": "2021-08-04T07:33:47+0200",
                    "date_edited_at": "2021-10-04T09:32:00+02:00",
                    "due_date": null,
                    "due_date_end": null,
                    "count_comments": 1,
                    "count_subtasks": 1,
                    "author": {
                        "id": 2,
                        "fullname": "Captain Freelo"
                    },
                    "worker": {
                        "id": 1,
                        "fullname": "Karel Borkovec"
                    },
                    "labels": [
                        {
                            "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                            "name": "In progress",
                            "color": "#f2830b"
                        }
                    ],
                    "parent_task_id": 4900,
                    "total_time_estimate": {
                        "minutes": 60
                    },
                    "users_time_estimates": [
                        {
                            "minutes": 30,
                            "user": {
                                "id": 136,
                                "fullname": "Karel Borkovec"
                            }
                        }
                    ]
                  }
            ]
            
## All tasks collection [/all-tasks?search_query=write&state_id=1&projects_ids[]=1&tasklists_ids[]=2&order_by=date_add&order=asc&with_label='in progress'&due_date_range[date_from]=2019-01-01&due_date_range[date_to]=2019-01-10&worker_id=1]

### Paginated collection of all tasks [GET]

+ Parameters
    + search_query (string, optional) - Fulltext search query for the task name
    + state_id (int, optional) - ID of the tasks state
    + projects_ids (array, optional) - Projects ids in array
    + tasklists_ids (array, optional) - Tasklists ids in array
    + `order_by` (string, optional) - Order column [priority|name|date_add|date_edited_at]
        + Default: date_add
    + order (string, optional) - Order direction [asc|desc]
        + Default: asc
    + with_label (string, optional) - Name of label, case insensitive
    + without_label (string, optional) - Name of label, case insensitive
    + no_due_date (boolean, optional) - Only tasks with no due date
        + Default: false
    + due_date_range (array, optional) - Range of due date [date_from, date_to], format Y-m-d H:i:s or Y-m-d
    + finished_overdue (boolean, optional) - Only tasks finished after due date
        + Default: false
    + finished_date_range (array, optional) - Range of finished date [date_from, date_to], format Y-m-d H:i:s or Y-m-d
    + worker_id (number, optional) - ID of worker


+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: `4789` (number) - ID of the task
            + name: `Write PR article` (string) - Name of the task
            + date_add: `2021-05-12T15:22:51+02:00` (string) - Date of adding task in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing task in ISO 8601 format
            + due_date: `2017-05-13T20:00:00+02:00` (string) - Due date of task in ISO 8601 format
            + due_date_end: `null` (string) - Due date end of task in ISO 8601 format
            + count_comments: 1 (number) - Number of comments in the task
            + count_subtasks: 1 (number) - Number of subtasks in the task
            + author (object) - task author
                + id: 1 (number) - author ID
                + fullname: `Captain Freelo` (string) - Fullname of the task author
            + worker (object)
                + id: `1` (number)
                + email: `active` (string)
                + fullname: `active` (string)
            + state (object) - project state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + project (object)
                + id: `88` (number) - ID of the project
                + name: `My Project` (string) - Name of the project
                + state (object) - project state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + tasklist (object)
                + id: `65` (number) - ID of the tasklist
                + name: `My Tasklist` (string) - Name of the tasklist
                + state (object) - tasklist state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state            
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + parent_task_id: 4700 (number, nullable) - ID of parent task if the task is subtask, null otherwise
            + custom_fields (array) - Array of custom fields
                + (object)
                    + field_uuid: `133c3793-f5cc-4302-b20b-63db0365f87c` (string) - Uuid of custom field
                    + custom_fields_types_uuid: `2f7bfe3a-c950-470e-b910-95b4caf5dc4f` (string) - Uuid of type of custom field
                    + project_id: 9 (number) - Uuid of project
                    + name: `CF` (string) - Name of custom field
                    + priority: 0 (number) - Priority of custom field
                    + field_date_add: `2022-07-28 11:25:27` (string) - Date when custom field was created
                    + value_uuid: `e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7` (string) - Uuid of value
                    + value_author_id: 11 (number) - Id of author of value
                    + value: `value` (string) - Value of custom field
                    + value_date_add: `2022-09-15 08:59:59` (string) - Date when value was created
                    + value_date_edited_at: null (string) - Date when value was edited
            + total_time_estimate (object)
                + minutes: 30 (number) - total estimated minutes
            + users_time_estimates (array)
                + user_estimate (object)
                    + minutes: 30 (number) - estimated minutes for the user
                    + user (object)
                        + id: 136 (number)
                        + fullname: Karel Borkovec (string)

    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "tasks": [
                        {
                            "id": 4789,
                            "name": "Write PR article",
                            "date_add": "2021-05-12T15:22:51+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "due_date": "2017-05-13T20:00:00+02:00",
                            "due_date_end": null,
                            "count_comments": 1,
                            "count_subtasks": 1,
                            "author": {
                                "id": 2,
                                "fullname": "Captain Freelo"
                            },
                            "worker": {
                                "id": 134,
                                "fullname": "John Davis"
                            },
                            "state": {
                                "id": 1,
                                "state": "active"
                            },                       
                            "project": {
                                "id": 88,
                                "name": "My Project",
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            },
                            "tasklist": {
                                "id": 65,
                                "name": "My Tasklist",
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            },
                            "labels": [
                                {
                                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                                    "name": "In progress",
                                    "color": "#f2830b"
                                }
                            ],
                            "parent_task_id": 4700,
                            "custom_fields": [
                                {
                                    "field_uuid": "133c3793-f5cc-4302-b20b-63db0365f87c",
                                    "custom_fields_types_uuid": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                                    "project_id": 9,
                                    "name": "CF",
                                    "priority": 0,
                                    "field_date_add": "2022-07-28 11:25:27",
                                    "value_uuid": "e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7",
                                    "value_author_id": 11,
                                    "value": "value",
                                    "value_date_add": "2022-09-15 08:59:59",
                                    "value_date_edited_at": null
                                }
                            ],
                            "total_time_estimate": {
                                "minutes": 60
                            },
                            "users_time_estimates": [
                                {
                                    "minutes": 30,
                                    "user": {
                                        "id": 136,
                                        "fullname": "Karel Borkovec"
                                    }
                                }
                            ]
                        }
                    ]
                }
            }


## Finished tasks collection [/tasklist/{tasklist_id}/finished-tasks?search_query=write]

+ Parameters
    + tasklist_id (number) - ID of the tasklist


### Finished tasks in tasklist collection [GET]

+ Parameters
    + search_query (string, optional) - Fulltext search query for the task name

+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add: `2021-05-12T15:22:51+02:00` (string) - Date of adding task in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing task in ISO 8601 format
            + due_date: `2017-05-13T20:00:00+02:00` (string) - Due date of task in ISO 8601 format
            + due_date_end: `null` (string) - Due date end of task in ISO 8601 format
            + date_finished: `2017-05-13T14:50:47+02:00` (string) - Date when task was finished in ISO 8601 format
            + count_comments: 1 (number) - Number of comments in the task
            + count_subtasks: 1 (number) - Number of subtasks in the task
            + author (object) - task author
                + id: 1 (number) - author ID
                + fullname: Captain Freelo (string) - Fullname of the task author
            + worker (object)
                + id: 1 (number)
                + email: active (string)
                + fullname: active (string)
            + finished_by (object)
                + id: 132 (number) - ID of the project
                + name: Project name (string) - Name of the project
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + total_time_estimate (object)
                + minutes: 30 (number) - total estimated minutes
            + users_time_estimates (array)
                + user_estimate (object)
                    + minutes: 30 (number) - estimated minutes for the user
                    + user (object)
                        + id: 136 (number)
                        + fullname: Karel Borkovec (string)

    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "finished_tasks": [
                        {
                            "id": 4955,
                            "name": "Write PR article",
                            "date_add": "2021-05-12T15:22:51+02:00",
                            "date_edited_at": "2021-10-04T09:32:00+02:00",
                            "due_date": "2017-05-13T20:00:00+02:00",
                            "due_date_end": null,
                            "date_finished": "2017-05-13T14:50:47+02:00",
                            "count_comments": 1,
                            "count_subtasks": 1,
                            "author": {
                                "id": 2,
                                "fullname": "Captain Freelo"
                            },
                            "worker": {
                                "id": 134,
                                "fullname": "John Davis"
                            },
                            "finished_by": {
                                "id": 136,
                                "fullname": "James Cook"
                            },
                            "labels": [
                                {
                                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                                    "name": "In progress",
                                    "color": "#f2830b"
                                }
                            ],
                            "total_time_estimate": {
                                "minutes": 60
                            },
                            "users_time_estimates": [
                                {
                                    "minutes": 30,
                                    "user": {
                                        "id": 136,
                                        "fullname": "Karel Borkovec"
                                    }
                                }
                            ]
                        }
                    ]
                }
            }

## Activate task [/task/{task_id}/activate]

+ Parameters
    + task_id (number) - ID of the task

### Activate task [POST]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }

## Finish task [/task/{task_id}/finish]

+ Parameters
    + task_id (number) - ID of the task

### Finish task [POST]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
        
## Move task [/task/{task_id}/move/{tasklist_id}]

+ Parameters
    + task_id (number) - ID of the task
    + tasklist_id (number) - ID of the target tasklist

### Move task [POST]

+ Request (application/json)

    + Attributes
        + work_reports_action - move_to_target_project (default) | keep_on_origin_project
        + custom_fields_action - nothing (default) | delete_what_cant_be_keep | move_to_comments_what_cant_be_keep | delete_all | move_to_comments_all
        
    + Body
    
            {
              "work_reports_action": "move_to_target_project",
              "custom_fields_action: "nothing"
            }

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
        

## Task [/task/{task_id}]

+ Parameters
    + task_id (number) - ID of the task

### Get task [GET]

+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add: `2016-08-04T07:33:47+02:00` (string) - Date of adding task in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing task in ISO 8601 format
            + due_date: `null` (string) - Due date of task in ISO 8601 format
            + due_date_end: `null` (string) - Due date end of task in ISO 8601 format
            + date_finished: `2016-08-05T08:50:47+02:00` (string) - Date when task was finished in ISO 8601 format
            + minutes: `120` (number)
            + priority_enum: `l` (string) -  [ l | m | h ]
            + count_subtasks: 1 (number) - Number of subtasks in the task
            + parent_task_id: 4880 (number) - ID of parent task (or null)
            + cost (object)
                + amount: 50000 (string) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + author (object) - task author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - Fullname of the task author
            + worker (object) - assigned worker
                + id: 1 (number) - worker ID
                + fullname: Karel Borkovec (string) - Fullname of the worker
            + state (object) - task state
                + id: 1 (number) - ID of state
                + state: active (string) - string representation of state
            + comments (array) - Array of comments
                + (object)
                    + id: 36012 (number) - ID of the comment
                    + content: <p>There are ...</p> (string) - Comment content
                    + date_add: `2016-08-10T08:19:46+02:00` (string) - Date of adding comment in ISO 8601 format
                    + author (object)
                        + id: 1 (number) - ID of the author
                        + fullname: Karel Borkovec (string) - Fullname of the author
                    + is_description: true (boolean)
                    + comments_reactions (array) - Array of reactions
                        + (object)
                            + id: 1 (number) - ID of the author
                            + fullname: Karel Borkovec (string) - Fullname of the author
                    + files (array) - Array of files in comment
                        + (object)
                            + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                            + filename: max_1352239.jpg (string) - name of the file
                            + caption: My photo (string) - caption of the file
                            + description: Photo of nature (string) - description of the file
                            + date_add: `2016-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                            + date_edited_at: `2016-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                            + size: 93461 (number) - Filesize of the file
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + project (object)
                + id: 2 (number)
                + name: Project name (string)
            + tasklist (object)
                + id: 2 (number)
                + name: Tasklist name (string)
            + copied_from_task (object, nullable) - can be null
                + id: 2 (number) - defines the task from which the task is copied
                + project (object) - copied task project
                    + id: 2 (number)
                    + is_template: false (boolean) - if copied task project is a template
            + multi_project_task (object)
                + is_multi_project: false (boolean) - information whether this is a task in multiple projects
                + assigned_to (array) - linked array (includes root task)
                    + (object)
                        + project (object)
                            + id: 2 (number)
                            + name: Project name (string)
                        + tasklist (object)
                            + id: 2 (number)
                            + name: Tasklist name (string)
                        + task (object)
                            + id: 2 (number)
                            + name: Task name (string)
                            + sorting_id: 1 (number)
            + count_subtasks: 1 (number) - Number of subtasks in the task
            + custom_fields (array)
                + (object)
                    + field_uuid: `133c3793-f5cc-4302-b20b-63db0365f87c` (string) - Uuid of custom field
                    + custom_fields_types_uuid: `2f7bfe3a-c950-470e-b910-95b4caf5dc4f` (string) - Uuid of type of custom field
                    + project_id: 9 (number) - Uuid of project
                    + name: `CF` (string) - Name of custom field
                    + priority: 0 (number) - Priority of custom field
                    + field_date_add: `2022-07-28 11:25:27` (string) - Date when custom field was created
                    + value_uuid: `e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7` (string) - Uuid of value
                    + value_author_id: 11 (number) - Id of author of value
                    + value: `value` (string) - Value of custom field
                    + value_date_add: `2022-09-15 08:59:59` (string) - Date when value was created
                    + value_date_edited_at: null (string) - Date when value was edited
            + total_time_estimate (object)
                + minutes: 30 (number) - total estimated minutes
            + users_time_estimates (array)
                + user_estimate (object)
                    + minutes: 30 (number) - estimated minutes for the user
                    + user (object)
                        + id: 136 (number)
                        + fullname: Karel Borkovec (string)

    + Body

            {
                "id": 4955,
                "name": "Write PR article",
                "date_add": "2016-08-04T07:33:47+02:00",
                "date_edited_at": "2021-10-04T09:32:00+02:00",
                "due_date": null,
                "due_date_end": null,
                "date_finished": "2016-08-05T08:50:47+02:00",
                "minutes": 120,
                "priority_enum": "l",
                "count_subtasks": 1,
                "parent_task_id": 4880,
                "cost": {
                    "amount": "50000",
                    "currency": "CZK"
                },
                "author": {
                    "id": 2,
                    "fullname": "Captain Freelo"
                },
                "worker": {
                    "id": 1,
                    "fullname": "Karel Borkovec"
                },
                "comments": [
                    {
                        "id": 36012,
                        "content": "<p>There are ...</p>",
                        "date_add": "2016-08-10T08:19:46+02:00",
                        "author": {
                            "id": 1,
                            "fullname": "Karel Borkovec"
                        },
                        "is_description": true,
                        "comments_reactions": [
                            {
                                "id": 1,
                                "fullname": "Karel Borkovec"
                            }
                        ],
                        "files": [
                            {
                                "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c",
                                "filename": "max_1352239.jpg",
                                "caption": "My photo",
                                "description": "Photo of nature",
                                "date_add": "2016-08-04T07:34:47+02:00",
                                "date_edited_at": "2016-08-04T07:40:47+02:00",
                                "size": 93461
                            }
                        ]
                    }
                ],
                "labels": [
                    {
                        "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                        "name": "In progress",
                        "color": "#f2830b"
                    }
                ],
                "project": {
                    "id": 1,
                    "name": "Project name"
                },
                "tasklist": {
                    "id": 1,
                    "name": "Tasklist name"
                },
                "copied_from_task": null,
                "multi_project_task": {
                    "is_multi_project": true,
                    "assigned_to": [
                        {
                            "project": {
                                "id": 1,
                                "name": "Project name"
                            },
                            "tasklist": {
                                "id": 1,
                                "name": "Tasklist name"
                            },
                            "task": {
                                "id": 1,
                                "name": "Task name",
                                "sorting_id": 1
                            }
                        },
                        {
                            "project": {
                                "id": 6,
                                "name": "Project name"
                            },
                            "tasklist": {
                                "id": 9,
                                "name": "Tasklist name"
                            },
                            "task": {
                                "id": 132,
                                "name": "Task name",
                                "sorting_id": 132
                            }
                        }
                    ]
                },
                "custom_fields": [
                    {
                        "field_uuid": "133c3793-f5cc-4302-b20b-63db0365f87c",
                        "custom_fields_types_uuid": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                        "project_id": 9,
                        "name": "CF",
                        "priority": 0,
                        "field_date_add": "2022-07-28 11:25:27",
                        "value_uuid": "e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7",
                        "value_author_id": 11,
                        "value": "value",
                        "value_date_add": "2022-09-15 08:59:59",
                        "value_date_edited_at": null
                    }
                ],
                "total_time_estimate": {
                    "minutes": 60
                },
                "users_time_estimates": [
                    {
                        "minutes": 30,
                        "user": {
                            "id": 136,
                            "fullname": "Karel Borkovec"
                        }
                    }
                ]
            }

### Edit task [POST]

+ Request (application/json)

    + Attributes
        + task (object, required)
            + name: Write PR article (string, optional) - Name of the task
            + due_date: `2016-08-10T08:00:00+0200` (string) - Due date of task in ISO 8601 format
            + due_date_end: `2016-09-10T08:00:00+0200` (string) - Due date end of task in ISO 8601 format
            + worker: 1 (number) - ID of assigned worker
            + priority_enum: h (string, optional) - Allowed options are l, m, h

    + Body

            {
                "name": "Edited task name",
                "due_date": "2016-08-10T08:00:00+0200",
                "due_date_end": "2016-09-10",
                "worker": 1
            }

+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add (string) - Date of adding task in ISO 8601 format
            + due_date (string) - Due date of task in ISO 8601 format
            + due_date_end (string) - Due date end of task in ISO 8601 format
            + state (object) - task state
                + (object)
                    + id: 1 (number) - ID of state
                    + state: active (string) - string representation of state
            + worker (object) - assigned worker
                + (object)
                    + id: 1 (number) - worker ID
                    + fullname: Karel Borkovec (string) - Fullname of the author
            + comments (array) - Array of comments
                + (object)
                    + id: 36012 (number) - ID of the comment
                    + content: <p>There are ...</p> (string) - Comment content
                    + date_add (string) - Date of adding comment in ISO 8601 format
                    + author (object)
                        + id: 1 (number) - ID of the author
                        + fullname: Karel Borkovec (string) - Fullname of the author
                    + is_description: true (boolean)

    + Body

            {
                "id": 4955,
                "name": "Write PR article",
                "date_add": "2016-08-04T07:33:47+0200",
                "due_date": null,
                "due_date_end": null,
                "worker": {
                    "id": 1,
                    "fullname": "John Newman"
                },
                "comments": [
                    {
                        "id": 36012,
                        "content": "<p>There are ...</p>",
                        "date_add": "2016-08-10T08:19:46+0200",
                        "author": {
                            "id": 1,
                            "fullname": "Karel Borkovec"
                        },
                        "is_description": true
                    }
                ]
            }

### Delete task [DELETE]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }


## Task description [/task/{task_id}/description]

+ Parameters
    + task_id (number) - ID of the task


### Get task description [GET]

+ Response 200 (application/json)

    + Attributes
        + comment (object)
            + id: 1677 (number) - ID of the comment
            + content: <p>Description content...</p> (string) - Content of the description
            + date_add (string) - Date of adding comment in ISO 8601 format
            + files (array) - Array of files
                + (object)
                    + id: 1135 (number) - ID of the file
                    + filename: max_1352239.jpg (string) - Filename of the file
                    + size: 93461 (number) - Filesize of the file

    + Body

            {
                "id": 1677,
                "content": "<p>Description content...</p>",
                "date_add": "2016-08-30T18:35:53+0200",
                "files": [
                    {
                        "id": 1135,
                        "filename": "max_1352239.jpg",
                        "size": 93461
                    }
                ]
            }


### Edit task description [POST]
Can be also used to create a new task description.

+ Request (application/json)

    + Attributes
        + comment (object)
            + content: Description content... (string, required) - Description content
            + files (array, optional) - Array of files
                + (object)
                    + download_url: http://www.domain.tld/galery/max_1352239.jpg (string, required) - Download URL
                    + filename: max_1352239.jpg (string, optional) - Optional filename

    + Body

            {
                "content": "Description content...",
                "files": [
                    {
                        "download_url": "http://www.domain.tld/galery/max_1352239.jpg",
                        "filename": "max_1352239.jpg"
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes
        + comment (object)
            + id: 1677 (number) - ID of the comment
            + content: <p>Description content...</p> (string) - Content of the description
            + date_add (string) - Date of adding comment in ISO 8601 format
            + files (array) - Array of files
                + (object)
                    + id: 1135 (number) - ID of the file
                    + filename: max_1352239.jpg (string) - Filename of the file
                    + size: 93461 (number) - Filesize of the file

    + Body

            {
                "id": 1677,
                "content": "<p>Description content...</p>",
                "date_add": "2016-08-30T18:35:53+0200",
                "files": [
                    {
                        "id": 1135,
                        "filename": "max_1352239.jpg",
                        "size": 93461
                    }
                ]
            }


## Task reminder [/task/{task_id}/reminder]

+ Parameters
    + task_id (number) - ID of the task

### Create task reminder [POST]

+ Request (application/json)

    + Attributes
        + reminder (object, required)
            + remind_at: `2016-08-10T08:00:00+0200` (string) - Remind date in ISO 8601 format

    + Body

            {
                "remind_at": "2016-08-10T08:00:00+0200"
            }
            
+ Response 200 (application/json)

    + Attributes
        + reminder (object)
            + remind_at: `2016-08-10T08:00:00` (string) - Remind date in ISO 8601 format
            + task (object) - task state
                + id: 1 (number) - ID of the task
                + name: active (string) - Name of the task

    + Body

            {
                "remind_at": "2016-08-10T08:00:00",
                "task": {
                    "id": 1,
                    "name": "My task"
                }
            }
        
### Delete task reminder [DELETE]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }

## Public links [/public-link/task/{task_id}]

+ Parameters
    + task_id (number) - ID of the task

### Get public link to task [GET]

+ Response 200 (application/json)

    + Attributes
        + public_shared_link (object)
            + url: `https://freelo.io/public/shared-link-view?a=192b1dda5e693960b12d8e6512abf8e6&b=77753bfd59ba06dae0a8891a035b0e7a` (string) - Public URL of task

    + Body

            {
                "url": "https://freelo.io/public/shared-link-view?a=192b1dda5e693960b12d8e6512abf8e6&b=77753bfd59ba06dae0a8891a035b0e7a",
            }

### Delete public link to task [DELETE]

+ Response 200 (application/json)

    + Body

            {
                  "result": "success"
            }

## Task from template [/task/create-from-template/{template_id}]

+ Parameters
    + template_id (number) - ID of the template

### Create task from template [POST]

+ Request (application/json)

    + Attributes
        + task (object, required)
            + task_id: 1364 (number, required) - ID of the task from template
            + target_project_id (number) - ID of the target project
            + target_tasklist_id (number) - ID of the tasklist project
            + preset_date_from: `2021-11-08` (string)  - Date to set floating due dates in templates
            + users_ids (array) - Users from template to invite.

    + Body
            {
                "task_id": 1364,
                "target_project_id": 6,
                "target_tasklist_id": 23,
                "preset_date_from": "2021-11-08",
                "users_ids": [745, 6523]
            }
+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 25 (number) - ID of the task
            + name: "My Task" (string) - Name of the task
            + tasklist (object)
                + id: 6 (number) - ID of the tasklist
                + name: "My Tasklist" (string) - Name of the tasklist

    + Body 

            {
                "id": 25,
                "name": "My Task",
                "tasklist": {
                    "id": 6,
                    "name": "My Tasklist"
                }
            }


## Time estimates total [/task/{task_id}/total-time-estimate]

+ Parameters
    + task_id (number) - ID of the task

### Set total time estimate [POST]

+ Request (application/json)

    + Attributes
        + minutes (number, required)

    + Body

            {
                "minutes": 120
            }
            
+ Response 200 (application/json)

    + Attributes
        + result: "success" (string)

    + Body

            {
                "result": "success"
            }

### Delete total time estimate [DELETE]

+ Response 200 (application/json)

    + Body

            {
                  "result": "success"
            }


## Time estimates user [/task/{task_id}/users-time-estimates/{user_id}]

+ Parameters
    + task_id (number) - ID of the task
    + user_id (number) - ID of the user

### Set users time estimate [POST]

+ Request (application/json)

    + Attributes
        + minutes (number, required)

    + Body

            {
                "minutes": 120
            }
            
+ Response 200 (application/json)

    + Attributes
        + result: "success" (string)

    + Body

            {
                "result": "success"
            }

### Delete users time estimate [DELETE]

+ Response 200 (application/json)

    + Body

            {
                  "result": "success"
            }


# Group Subtasks
        
## Subtasks in task [/task/{task_id}/subtasks]

+ Parameters
    + task_id (number) - ID of the task

### Paginated collection of subtasks in task [GET]

+ Response 200 (application/json)

    + Attributes
        + subtask (object)
            + id: `4789` (number) - ID of the subtask
            + task_id: `5874` (number, nullable) - ID of the smart task representing this subtask
            + name: `Write PR article` (string) - Name of the subtask
            + date_add: `2021-06-21T15:22:51+02:00` (string) - Date of adding subtask in ISO 8601 format
            + due_date: `2021-06-22T20:00:00+02:00` (string) - Due date of subtask in ISO 8601 format
            + due_date_end: `null` (string) - Due date end of subtask in ISO 8601 format
            + count_comments: 1 (number) - Number of comments in the subtask
            + count_subtasks: 1 (number) - Number of subtasks in the subtask
            + author (object) - subtask author
                + id: 1 (number) - author ID
                + fullname: `Captain Freelo` (string) - Fullname of the task author
            + worker (object) - assigned worker
                + id: `1` (number)
                + fullname: `active` (string)
            + state (object) - subtask state
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + project (object)
                + id: `88` (number) - ID of the project
                + name: `My Project` (string) - Name of the project
                + state (object) - project state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + tasklist (object)
                + id: `65` (number) - ID of the tasklist
                + name: `My Tasklist` (string) - Name of the tasklist
                + state (object) - tasklist state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state            
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)

    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "subtasks": [
                        {
                            "id": 4789,
                            "task_id": 5874,
                            "name": "Write PR article",
                            "date_add": "2017-05-12T15:22:51+02:00",
                            "due_date": "2017-05-13T20:00:00+02:00",
                            "due_date_end": null,
                            "count_comments": 1,
                            "count_subtasks": 1,
                            "author": {
                                "id": 2,
                                "fullname": "Captain Freelo"
                            },
                            "worker": {
                                "id": 134,
                                "fullname": "John Davis"
                            },
                            "state": {
                                "id": 1,
                                "state": "active"
                            },                       
                            "project": {
                                "id": 88,
                                "name": "My Project",
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            },
                            "tasklist": {
                                "id": 65,
                                "name": "My Tasklist",
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            },
                            "labels": [
                                {
                                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                                    "name": "In progress",
                                    "color": "#f2830b"
                                }
                            ]
                        }
                    ]
                }
            }

### Create subtask [POST]

+ Parameters
    + task_id (number) - ID of the parent task
    
+ Request (application/json)

    + Attributes
        + subtask (object, required)
            + name: Write PR article (string, required) - Name of the subtask
            + due_date: `2016-08-10T08:00:00+0200` (string) - Due date of subtask in ISO 8601 format
            + due_date_end: `2016-09-10T08:00:00+0200` (string) - Due date end of subtask in ISO 8601 format
            + worker: 4857 (number) - ID of assigned worker
            + priority_enum: task priority [h, m, l] (string)
            + comment (object, optional)
                + content: There are... (string, required) - Comment content
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + tracking_users_ids (array) - array of IDs of the followers
            
    + Body

            {
                "name": "Write PR article",
                "due_date": "2016-08-10T08:00:00+0200",
                "due_date_end": "2016-09-10T08:00:00+0200",
                "worker": 5836,
                "priority_enum": "h",
                "comment": {
                    "content": "There are ..."
                },
                "labels": [
                    {
                        "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                        "name": "In progress",
                        "color": "#f2830b"
                    }
                ],
                "tracking_users_ids": [875]
            }
            
+ Response 200 (application/json)

    + Attributes
        + subtask (object)
            + id: 455 (number) - ID of the subtask
            + task_id: `2574` (number, nullable) - ID of the smart task representing this subtask
            + name: Write PR article (string) - Name of the subtask
            + due_date: `2016-08-11T08:00:00+0200` (string) - Due date of subtask in ISO 8601 format
            + due_date_end: `2016-09-11T08:00:00+0200` (string) - Due date end of subtask in ISO 8601 format
            + worker (object) - assigned worker
                + id: `4857` (number)
                + fullname: `active` (string)
            + priority_enum: task priority [h, m, l] (string)
            + comment (object, optional)
                + content: There are... (string, required) - Comment content
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + tracking_users (array) - Array of followers
                + (object)
                    + id: 875 (number) - ID of the user
                    + fullname: "John Doe" (string) - Name of the user

    + Body

            {
                "id": 4789,
                "task_id": 2574,
                "name": "Write PR article",
                "due_date": "2016-08-11T08:00:00+0200",
                "due_date_end": "2016-09-11T08:00:00+0200",
                "worker": {
                    "id": 1,
                    "fullname": "John Davis"
                },
                "priority_enum": "h",
                "labels": [
                    {
                        "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                        "name": "In progress",
                        "color": "#f2830b"
                    }
                ],
                "tracking_users": [
                    {
                        "id": 875,
                        "fullname": "John Doe"
                    }
                ]
            }

# Group Task labels

## Task labels collection [/task-labels]

### Create task labels [POST]

+ Request (application/json)

    + Attributes
        + task label (object, required)
            + name: in progress (string)
            + color: #f2830b (string, optional) - only supported colors, default will be used while missing or wrong

    + Body
        
            {
                "labels": [
                    {
                        "name": "In progress",
                        "color": "#f2830b"
                    }
                ]
            }

+ Response 200 (application/json)

### Add task labels to task [POST /task-labels/add-to-task/{task_id}]

Create new task label when label with specific name and color not found.

+ Parameters
    + task_id (number) - ID of the task

+ Request (application/json)

    + Attributes
        + labels (array, required) - Task labels data
            + (object)
                + name: "Label text" (string, optional) - Text shown in label
                + color: #15acc0 (string, optional) - Color of label (accepts only colors supported by us, is ignored without name)
                + uuid: `5541a8c9-fb00-4385-9ead-d7baccd24d76` (string, optional) -  UUID of existing label

    + Body

            {
                "labels": [
                    {
                        "name": "Label text"
                    },
                    {
                        "name": "Label text with specified color",
                        "color": "#15acc0"
                    },
                    {
                        "uuid": "5541a8c9-fb00-4385-9ead-d7baccd24d76"
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes
        + result: "success" (string)

    + Body

            {
                "result": "success"
            }
    
### Remove task labels from task [POST /task-labels/remove-from-task/{task_id}]

+ Parameters
    + task_id (number) - ID of the task

+ Request (application/json)

    + Attributes
        + labels (array, required) - Task labels data
            + (object)
                + name: "Label text" (string, optional) - Text shown in label
                + color: #15acc0 (string, optional) - Color of label (accepts only colors supported by us, is ignored without name)
                + uuid: `5541a8c9-fb00-4385-9ead-d7baccd24d76` (string, optional) -  UUID of existing label

    + Body

            {
                "labels": [
                    {
                        "name": "Label text"
                    },
                    {
                        "name": "Label text with specified color",
                        "color": "#15acc0"
                    },
                    {
                        "uuid": "5541a8c9-fb00-4385-9ead-d7baccd24d76"
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes
        + result: "success" (string)

    + Body

            {
                "result": "success"
            }

# Group Comments

## Comments collection [/task/{task_id}/comments]

+ Parameters
    + task_id (number) - ID of the task
    + comment_id (number) - ID of the comment

### Create comment [POST]
If task has no comments, it will create description instead of comment. For adding inline file with caption see [Upload file](/reference/files/file/upload-file)

+ Request (application/json)

    + Attributes
        + comment (object)
            + content: Comment content... (string, required) - Comment content
            + files (array, optional) - Array of files
                + (object)
                    + download_url: http://www.domain.tld/galery/max_1352239.jpg (string, required) - Download URL
                    + filename: max_1352239.jpg (string, optional) - Optional filename

    + Body

            {
                "content": "Comment content...",
                "files": [
                    {
                        "download_url": "http://www.domain.tld/galery/max_1352239.jpg",
                        "filename": "max_1352239.jpg"
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes
        + comment (object)
            + id: 1677 (number) - ID of the comment
            + content: <p>Comment content...</p> (string) - Name of the comment
            + date_add (string) - Date of adding comment in ISO 8601 format
            + files (array) - Array of files
                + (object)
                    + id: 1135 (number) - ID of the file
                    + filename: max_1352239.jpg (string) - Filename of the file
                    + size: 93461 (number) - Filesize of the file

    + Body

            {
                "id": 1677,
                "content": "<p>Comment content...</p>",
                "date_add": "2016-08-30T18:35:53+0200",
                "files": [
                    {
                        "id": 1135,
                        "filename": "max_1352239.jpg",
                        "size": 93461
                    }
                ]
            }


### Edit comment [POST /comment/{comment_id}]

+ Request (application/json)

    + Attributes
        + comment (object)
            + content: New comment content... (string, required) - Comment content
            + files (array, optional) - Array of files
                + (object)
                    + download_url: http://www.domain.tld/galery/max_1352239.jpg (string, required) - Download URL
                    + filename: max_1352239.jpg (string, optional) - Optional filename

    + Body

            {
                "content": "New comment content...",
                "files": [
                    {
                        "download_url": "http://www.domain.tld/galery/max_1352239.jpg",
                        "filename": "max_1352239.jpg"
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes
        + comment (object)
            + id: 1677 (number) - ID of the comment
            + content: <p>New comment content...</p> (string) - Name of the comment
            + date_add (string) - Date of adding comment in ISO 8601 format
            + files (array) - Array of files
                + (object)
                    + id: 1135 (number) - ID of the file
                    + filename: max_1352239.jpg (string) - Filename of the file
                    + size: 93461 (number) - Filesize of the file

    + Body

            {
                "id": 1677,
                "content": "<p>Comment content...</p>",
                "date_add": "2016-08-30T18:35:53+0200",
                "files": [
                    {
                        "id": 1135,
                        "filename": "max_1352239.jpg",
                        "size": 93461
                    }
                ]
            }

            
## All comments collection [/all-comments?projects_ids[]=1&type=task&order_by=date_add&order=desc]

### Paginated collection of all comments [GET]

+ Parameters
    + projects_ids (array, optional) - Projects ids in array
    + type (string, optional) - Comment type [all|task|document|file|link]
        + Default: all
    + `order_by` (string, optional) - Order column [date_add|date_edited_at]
        + Default: date_add
    + order (string, optional) - Order direction [asc|desc]
        + Default: desc
    
+ Response 200 (application/json)

    + Attributes
        + comment (object)
            + id: 145 (number) - Id of the comment - only for task's and document's comments
            + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the comment - only for file's and link's comments
            + content (string) - content of the comment
            + date_add (string) - date of adding comment in ISO 8601 format
            + date_edited_at (string) - date of last editing in ISO 8601 format
            + author (object)
                + id: 1 (number) - Id of the author
                + fullname: Karel Borkovec (string)
            + task (object)
                + id: 25 (number) - Id of the task
                + name: task name (string)
            + tasklist (object)
                + id: 426 (number) - Id of the tasklist
                + name: Marketing (string)
            + project (object)
                + id: 132 (number) - Id of the project
                + name: Project name (string)
            + document (object)
                + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the document
                + name: My document (string)
            + link (object)
                + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the link
                + name: My link (string)
            + file (object)
                + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the file
            + files (array)
                + (object)
                    + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the file
                    + filename: max_1352239.jpg (string) - name of the file
                    + caption (string) - caption of the file
                    + descriptioin (string) - description of the file
                    + date_add (string) - date of adding file in ISO 8601 format
                    + date_edited_at (string) - date of last editing in ISO 8601 format
                    + size (number) - filesize of the file
        
    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "comments": [
                        {
                            "id": 5476,
                            "uuid": null,
                            "content": "Comment content",
                            "date_add": "2018-08-08T11:34:57+02:00",
                            "date_edited_at": "2018-08-09T12:14:00+02:00",
                            "author": {
                                "id": 2,
                                "fullname": "Karel Borkovec"
                            },
                            "task": {
                                "id": 54,
                                "name": "Advertisement"
                            },
                            "tasklist": {
                                "id": 426,
                                "name": "Marketing"
                            },
                            "project": {
                                "id": 23,
                                "name": "My project"
                            },
                            "document": null,
                            "link": null,
                            "file": null,
                            "files": [
                                {
                                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                                    "filename": "max_1352239.jpg",
                                    "caption": "File caption",
                                    "description": "File description",
                                    "date_add": "2018-08-08T11:34:57+02:00",
                                    "date_edited_at": "2018-08-09T12:14:00+02:00",
                                    "size": 93461
                                }
                            [
                        }
                    ]
                }
            }
            
            
# Group Time tracking

## Start time tracking [/timetracking/start]

### Start time tracking [POST]

+ Parameters
    + task_id (number, optional) - ID of the task
    + note (string, optional) - Note for time tracking
    
+ Response 200 (application/json)

    + Attributes
        + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string) - universally unique identifier of the time tracking

   + Body

            {
                "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c"
            }


## Stop time tracking [/timetracking/stop]

### Stop time tracking [POST]
    
+ Response 200 (application/json)

    + Attributes
        + report (object)
            + id: 1677 (number) - ID of the work report
            + date_add (string) - Real date of adding work report in ISO 8601 format
            + date_reported (string) -  Date of work report in ISO 8601 format 
            + note: "Noteâ€¦" (string)
            + minutes: 60 (number)
            + cost (object)
                + amount: 1025 (string) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            
            + author (object)
                + id: 2 (number) - ID of the author
                + fullname: Robert Miles (string) - Fullname of the author
            + worker (object)
                + id: 1 (number) - ID of the worker
                + fullname: John Davis (string) - Fullname of the worker

   + Body

            {
                "id": 1677,
                "date_add": "2016-09-05T09:16:32+01:00",
                "date_reported": "2016-08-30",
                "note": "Noteâ€¦",
                "minutes": 60,
                "cost": {
                    "amount": "20000",
                    "currency": "CZK"
                },
                "author": {
                    "id": 2,
                    "fullname": "Robert Miles"
                },
                "worker": {
                    "id": 1,
                    "fullname": "John Davis"
                }
            }


## Edit time tracking [/timetracking/edit]

### Edit time tracking [POST]

+ Parameters
    + task_id (number, optional) - ID of the task
    + note (string, optional) - Note for time tracking
    
+ Response 200 (application/json)

    + Attributes
        + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string) - universally unique identifier of the time tracking

   + Body

            {
                "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c"
            }

# Group Work reports

## Work reports [/work-reports?projects_ids[]=1&users_ids[]=1&tasks_labels[]=b52e341f-5e45-4567-9e2b-994931b7eb13&date_reported_range[date_from]=2019-01-01&date_reported_range[date_to]=2019-01-10]

### Work reports collection [GET]

+ Parameters
    + projects_ids (array, optional) - Projects ids in array
    + users_ids (array, optional) - Users ids in array
    + tasks_ids (array, optional) - Tasks ids in array
    + tasks_labels (array, optional) - UUIDs for task labels of tasks to which reports belong
    + date_reported_range (array, optional) - Date from and to in array
    + date_edited_from (string, optional) - Last edited date

+ Response 200 (application/json)

    + Attributes
        + work_report (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add (string) - Date of adding work report in ISO 8601 format
            + date_reported (string) - Reported date in ISO 8601 format
            + date_edited_at (string) - Date of last editing in ISO 8601 format
            + note (string)
            + minutes (number)
            + cost (object)
                + amount: 1025 (string) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + project (object)
                + id: 132 (number)
                + name: Project name (string)
                + labels (array)
            + tasklist (object)
                + id: 426 (number)
                + name: Marketing (string)
            + task (object)
                + id: 25 (number)
                + name: task name (string)
                + minutes (number) - Total minutes
                + parent_task_id: 24510 (number)
                + cost (object)
                    + amount: 1025 (string) - Total amount
                    + currency: CZK (string) - Currency iso code [ CZK | EUR | USD ]
                + labels (array)
                    + (object)
                        + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - Universally unique identifier of the label
                        + name: Work in progress (string) - Name of the label
                        + color: #77787a (string) - Color of the label
                + total_time_estimate (object)
                    + minutes: 30 (number) - total estimated minutes
                + users_time_estimates (array)
                    + user_estimate (object)
                        + minutes: 30 (number) - estimated minutes for the user
                        + user (object)
                            + id: 136 (number)
                            + fullname: Karel Borkovec (string)
            + author (object)
                + id: 1 (number)
                + fullname: Karel Borkovec (string)
            + worker (object)
                + id: 1 (number)
                + fullname: Karel Borkovec (string)

    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "reports": [
                        {
                            "id": 5476,
                            "date_add": "2018-08-08T11:34:57+02:00",
                            "date_reported": "2018-08-08T11:34:57+02:00",
                            "date_edited_at": "2018-08-09T12:14:00+02:00",
                            "note": null,
                            "minutes": 60,
                            "cost": {
                                "amount": "0",
                                "currency": "CZK"
                            },
                            "task": {
                                "id": 26518,
                                "name": "task name",
                                "minutes": 60,
                                "parent_task_id": 24510,
                                "cost": {
                                    "amount": "400",
                                    "currency": "CZK"
                                },
                                "labels": [
                                    {
                                        "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                                        "name": "Work in progress",
                                        "color": "#77787a"
                                    }
                                ],
                                "total_time_estimate": {
                                    "minutes": 60
                                },
                                "users_time_estimates": [
                                    {
                                        "minutes": 30,
                                        "user": {
                                            "id": 136,
                                            "fullname": "Karel Borkovec"
                                        }
                                    }
                                ]
                            },
                            "tasklist": {
                                "id": 6271,
                                "name": "Marketing"
                            },
                            "project": {
                                "id": 5137,
                                "name": "Project name",
                                "labels": [
                                    "devs"
                                ]
                            },
                            "author": {
                                "id": 136,
                                "fullname": "Karel Borkovec"
                            },
                            "worker": {
                                "id": 136,
                                "fullname": "Karel Borkovec"
                            }
                        }
                    ]
                }
            }

## Task work reports [/task/{task_id}/work-reports]

+ Parameters
    + task_id (number) - ID of the task
    + work_report_id (number) - ID of the edited work report
        

### Create work report [POST]

+ Request (application/json)

    + Attributes
        + report (object)
            + date_reported (string, optional) -  Date of work report in ISO 8601 format 
            + worker_id: 1 (number, optional) - ID of worker 
            + minutes: 60 (number) - Total minutes
            + cost: "20000" (string) - Total money amount reported - 2 decimal places and multiplied by 100
            + note: "Noteâ€¦" (string, optional) - Note

    + Body

            {
                "date_reported": "2016-08-30",
                "worker_id": 1,
                "minutes": 60,
                "cost": "20000",
                "note": "Noteâ€¦"
            }

+ Response 200 (application/json)

    + Attributes
        + report (object)
            + id: 1677 (number) - ID of the work report
            + date_add (string) - Real date of adding work report in ISO 8601 format
            + date_reported (string) -  Date of work report in ISO 8601 format 
            + note: "Noteâ€¦" (string)
            + minutes: 60 (number)
            + cost (object)
                + amount: 1025 (string) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + author (object)
                + id: 2 (number) - ID of the author
                + fullname: Robert Miles (string) - Fullname of the author
            + worker (object)
                + id: 1 (number) - ID of the worker
                + fullname: John Davis (string) - Fullname of the worker
            + task (object, optional)
                + id: 51 (number) - ID of the task joined to work report
                + name: "Task name" (string) - Name of the Task

    + Body

            {
                "id": 1677,
                "date_add": "2016-09-05T09:16:32+01:00",
                "date_reported": "2016-08-30",
                "note": "Noteâ€¦",
                "minutes": 60,
                "cost": {
                    "amount": "20000",
                    "currency": "CZK"
                },
                "author": {
                    "id": 2,
                    "fullname": "Robert Miles"
                },
                "worker": {
                    "id": 1,
                    "fullname": "John Davis"
                },
                "task": {
                    "id": 51,
                    "name": "Task name"
                }
            }

### Edit work report [POST /work-reports/{work_report_id}]  

+ Request (application/json)

    + Attributes
        + minutes: 60 (number, optional) - Total minutes
        + cost: "20000" (string, optional) - Total money amount reported - 2 decimal places and multiplied by 100
        + date_reported (string, optional) -  Date of work report in ISO 8601 format 
        + note: "Noteâ€¦" (string, optional) - Note
        + task_id: 51 (number, optional) - Task that can be joined to work report

    + Body

            {
                "minutes": 60,
                "cost": "20000",
                "date_reported": "2016-08-30",
                "note": "Noteâ€¦",
                "task_id": 51
            }

+ Response 200 (application/json)

    + Attributes
        + id: 1677 (number) - ID of the work report
        + date_add (string) - Real date of adding work report in ISO 8601 format
        + date_reported (string) - Date of work report in ISO 8601 format 
        + note: "Noteâ€¦" (string)
        + minutes: 60 (number)
        + cost (object)
            + amount: 1025 (string) - currency amount
            + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
        + author (object)
            + id: 2 (number) - ID of the author
            + fullname: Robert Miles (string) - Fullname of the author
        + worker (object)
            + id: 1 (number) - ID of the worker
            + fullname: John Davis (string) - Fullname of the worker
        + task (object, optional)
            + id: 51 (number) - ID of the task joined to work report
            + name: "Task name" (string) - Name of the Task

    + Body

            {
                "id": 1677,
                "date_add": "2016-09-05T09:16:32+01:00",
                "date_reported": "2016-08-30",
                "note": "Noteâ€¦",
                "minutes": 60,
                "cost": {
                    "amount": "20000",
                    "currency": "CZK"
                },
                "author": {
                    "id": 2,
                    "fullname": "Robert Miles"
                },
                "worker": {
                    "id": 1,
                    "fullname": "John Davis"
                },
                "task": {
                    "id": 51,
                    "name": "Task name"
                }
            }

### Delete work report [DELETE /work-reports/{work_report_id}]

+ Parameters
    + work_report_id (number) - ID of the work report

+ Response 200 (application/json)

    + Body

            {
                "result": "success"
            }


# Group Invoicing

## Issued invoices [/issued-invoices?date_range[date_from]="2023-11-07"&date_range[date_to]="2023-11-07"&projects_ids[0]=25]

### Issued invoices collection [GET]

+ Parameters
    + `date_range` (array) - invoices with date_add in that range
        + date_from (string)
        + date_to (string)
    + projects_ids (array) - invoices containing items from these projects

+ Response 200 (application/json)

    + Attributes
        + issued_invoice (object)
            + id: 598 (number)
            + date_add (string)
            + note (string)
            + currency: CZK (string) [ CZK | EUR | USD ]
            + minutes (number)
            + price (object)
                + amount: 100 (string) - currency amount
                + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
            + subject (object)
                + company_name (string)
                + invoice_url (string)
            + inv_items (array)
                + (object)
                    + id: 36012 (number)
                    + name: Invoice item (string)
                    + minutes (number)
                    + price (object)
                        + amount: 100 (string) - currency amount
                        + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]

    + Body

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "issued_invoices": [
                        {
                            "id": 159,
                            "date_add": "2018-08-15T09:09:42+02:00",
                            "note": "â€¦",
                            "currency": "CZK",
                            "minutes": 120,
                            "price": {
                                "amount": "0",
                                "currency": "CZK"
                            },
                            "subject": {
                                "company_name": "Company",
                                "invoice_url": "â€¦"
                            },
                            "inv_items": [
                                {
                                    "id": 153,
                                    "name": "Invoice item",
                                    "minutes": 120,
                                    "price": {
                                        "amount": "0",
                                        "currency": "CZK"
                                    }
                                }
                            ]
                        }
                    ]
                }
            }


## Issued invoice detail [/issued-invoice/{invoice_id}]

### Get issued invoice detail [GET]

+ Response 200 (application/json)

    + Attributes
        + id: 598 (number)
        + date_add (string)
        + currency: CZK (string) [ CZK | EUR | USD ]
        + note (string)
        + minutes (number)
        + price (object)
            + amount: 100 (string) - currency amount
            + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
        + subject (object)
            + company_name (string)
            + invoice_url (string)
        + inv_items (array)
            + (object)
                + id: 36012 (number)
                + name: Invoice item (string)
                + minutes (number)
                + reports (array)
                    + (object)
                        + id: 5012 (number)
                        + project_name: Project name (string)
                        + tasklist_name: Tasklist name (string)
                        + name: Task name (string)
                        + minutes (number)
                        + price (object)
                            + amount: 100 (string) - currency amount
                            + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]

    + Body

            {
                "id": 176,
                "date_add": "2018-11-13T13:29:14+01:00",
                "currency": "CZK",
                "note": "â€¦",
                "subject": {
                    "company_name": "Company",
                    "invoice_url": "â€¦"
                },
                "inv_items": [
                    {
                        "id": 168,
                        "name": "Project 1",
                        "minutes": 240,
                        "price": {
                            "amount": "80000",
                            "currency": "CZK"
                        },
                        "reports": [
                            {
                                "id": 912,
                                "project_name": "Project 1",
                                "tasklist_name": "Tasklist 1",
                                "name": "Task name",
                                "price": {
                                    "amount": "20000",
                                    "currency": "CZK"
                                },
                                "minutes": 60
                            }
                        ]
                    }
                ],
                "price": {
                    "amount": "80000",
                    "currency": "CZK"
                },
                "minutes": 240
            }

## Issued invoice reports [/issued-invoice/{invoice_id}/reports]

### Download issued invoice reports [GET]

+ Response 200 (text/csv)

## Mark as invoiced [/issued-invoice/{invoice_id}/mark-as-invoiced]

### Mark issued invoice as invoiced [POST]

+ Request (application/json)

    + Attributes
        + url: https://www.freelo.io (string, required)
        + subject: Company tld. (string, required)

    + Body

            {
                "url": "https://www.freelo.io",
                "subject": "Company tld."
            }

+ Response 200 (application/json)

    + Attributes
        + id: 598 (number)
        + date_add (string)
        + currency: CZK (string) [ CZK | EUR | USD ]
        + minutes (number)
        + price (object)
            + amount: 100 (string) - currency amount
            + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]
        + inv_items (array)
            + (object)
                + id: 36012 (number)
                + name: Invoice item (string)
                + minutes (number)
                + reports (array)
                    + (object)
                        + id: 5012 (number)
                        + project_name: Project name (string)
                        + tasklist_name: Tasklist name (string)
                        + name: Task name (string)
                        + minutes (number)
                        + price (object)
                            + amount: 100 (string) - currency amount
                            + currency: CZK (string) - currency iso code [ CZK | EUR | USD ]

    + Body

            {
                "id": 176,
                "date_add": "2018-11-13T13:29:14+01:00",
                "currency": "CZK",
                "inv_items": [
                    {
                        "id": 168,
                        "name": "Project 1",
                        "minutes": 240,
                        "price": {
                            "amount": "80000",
                            "currency": "CZK"
                        },
                        "reports": [
                            {
                                "id": 912,
                                "project_name": "Project 1",
                                "tasklist_name": "Tasklist 1",
                                "name": "Task name",
                                "price": {
                                    "amount": "20000",
                                    "currency": "CZK"
                                },
                                "minutes": 60
                            }
                        ]
                    }
                ],
                "price": {
                    "amount": "80000",
                    "currency": "CZK"
                },
                "minutes": 240
            }


# Group Users

## Find all users - coworkers [/users]

### Paginated collection of all users [GET]

+ Response 200 (application/json)

    + Attributes
        + user (object)
            + id: 69 (number)
            + fullname: Robert Miles (string)

    + Body 

            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "users": [
                        {
                            "id": 69,
                            "fullname": "Robert Miles"
                        }
                    ]
                }
            }
        
## Find users who promoted me as project manager [/users/project-manager-of]

### Collection of users [GET]

+ Response 200 (application/json)

    + Attributes
        + user (object)
            + id: 69 (number)
            + fullname: Robert Miles (string)

    + Body 

            [
                {
                    "id": 69,
                    "fullname": "Robert Miles"
                }
            ]

## Manage users [/users/manage-workers]

### Invite users to the projects by emails [POST]

+ Request (application/json)

    + Attributes
        + projects_ids (array) - array of projects IDs
        + emails (array) - array of email addresses

    + Body

            {
                "projects_ids": [25],
                "emails": ["user@domain.tld"]
            }

+ Response 200 (application/json)

    + Body

            {
                "newly_invited_users_to_projects": [],
                "newly_created_users": [
                    {
                        "id": 1,
                        "email": "user@freelo.io"
                    }
                ],
                "newly_invited_users": [
                    {
                        "id": 1,
                        "projects_ids": [
                            3
                        ],
                        "email": "user@freelo.io"
                    }
                ],
                "removed_users_from_projects": [],
            }

### Invite users to the projects by users ids [POST]

+ Request (application/json)

    + Attributes
        + projects_ids (array) - array of projects IDs
        + users_ids (array) - array of users ids

    + Body

            {
                "projects_ids": [25],
                "users_ids": [134]
            }

+ Response 200 (application/json)

    + Body

            {
                "newly_invited_users_to_projects": [],
                "newly_created_users": [
                    {
                        "id": 1,
                        "email": "user@freelo.io"
                    }
                ],
                "newly_invited_users": [
                    {
                        "id": 1,
                        "projects_ids": [
                            3
                        ],
                        "email": "user@freelo.io"
                    }
                ],
                "removed_users_from_projects": [],
            }
            

## Out of office [/user/{user_id}/out-of-office]

Out of office can be managed for yourself, or for your co-workers if you are the captain of a company account with a verified domain.

+ Parameters
    + user_id (number) - ID of the user, yours or your co-worker's

### Get [GET]

Date-times are always returned in UTC, please convert them to/from your local time zone on your own.

+ Response 200 (application/json)

    + Attributes
        + out_of_office: (object, optional)
            + date_from: `2024-05-20T22:00:00Z` (string) - date time in UTC
            + date_to: `2024-05-21T21:59:59Z` (string) - date time in UTC

    + Body

        {
            "out_of_office": {
                "date_from": "2024-05-20T22:00:00Z",
                "date_to": "2024-05-21T21:59:59Z"
            }
        }

### Enable [POST]

Send date-times in UTC or in your local time zone (which will be converted to UTC automatically). For example, you can send `2024-05-21T00:00:00+02:00`, which is the same as `2024-05-20T22:00:00Z`.

+ Request

    + Attributes

        + out_of_office: (object)
            + date_from: `2024-05-20T22:00:00Z` (string) - UTC or timezone format `2024-05-21T00:00:00+02:00`
            + date_to: `2024-05-21T21:59:59Z` (string) - UTC or timezone format
    
    + Body
    
        {
            "out_of_office": {
                "date_from": "2024-05-20T22:00:00Z",
                "date_to": "2024-05-21T21:59:59Z"
            }
        }


+ Response 200 (application/json)

    + Attributes
        + result: "success" (string)

    + Body

            {
                "result": "success"
            }

### Disable [DELETE]

+ Response 200 (application/json)

    + Attributes
        + result: "success" (string)

    + Body

            {
                "result": "success"
            }

# Group Notifications

## Find all notifications [/all-notifications]

### Paginated collection of all notifications [GET]

+ Parameters
    + projects_ids (array, optional)
    + users_ids (array, optional) - Authors of notifications.
    + teams_uuids (array, optional) - Appends users from team to list of authors.
    + order (string, optional) - Data order (desc or asc)
        + Default: desc
    + notification_types (array, optional)
    + only_unread (boolean, optional) - Show only unread
        + Default: false

+ Response 200 (application/json)

    + Attributes
        + notification (object)
            + id: 14 (number)
            + type: comment_new (string)
            + date_action: `2021-05-26T04:59:20+00:00` (string)
            + author (object)
                + id: 21 (number)
                + fullname: Captain Freelo (string)
            + who (object, optional)
                + id: 26 (number)
                + fullname: John Doe (string)
            + is_unread (boolean)
            + is_new (boolean) - When (some) notifications are turned off, they will be false here but can still be unread.
            + task (object, optional)
                + id: 1 (number)
                + name: Task name (string)
            + tasklist (object, optional)
                + id: 426 (number)
                + name: Tasklist name (string)
            + project (object)
                + id: 69 (number)
                + name: Project name (string)
            + comment (object, optional)
                + id: 112 (number)
            + document (object, optional)
                + id: 112 (number)
                + name: Document name (string)
            + file (object, optional)
                + uuid: 25 (number)
                + filename: max_1352239.jpg (string)
                + caption: `Caption of file` (string)
            + file_comment (object, optional)
                + id: 112 (number)
            + project_link (object, optional)
                + id: 112 (number)
                + name: Project link name (string)
            + project_link_comment (object, optional)
                + id: 112 (number)
            + multi_notification (array, optional) - Some notifications can hold information of more actions, i.e. new comment.
            + work_deleted (object, optional) - For this specific notification adds info about deleted work
                + minutes: 60 (number)
                + cost (object, optional)
                    + amount: 1000 (number)
                    + currency: CZK (string)
                + note: `Work note` (string)
            + more_comments (boolean, optional) - For new comment type returns info about grouping more comments together.
            + more_users (array, optional) - Returns grouped users - would be authors in separate notifications
                + (object)
                    + id: 26 (number)
                    + fullname: John Doe (string)

## Mark as read [/notification/{notification_id}/mark-as-read]

### Mark as read [POST]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }
        
## Mark as unread [/notification/{notification_id}/mark-as-unread]
        
### Mark as unread [POST]

+ Response 200 (application/json)

    + Body 

            {
                "result": "success"
            }

# Group Events

## Find all events [/events?projects_ids[]=1&users_ids[]=1&events_types[]=''&order='DESC'&date_range[date_from]=2021-01-01&date_range[date_to]=2021-02-20]

### Paginated collection of all events [GET]

+ Parameters
    + projects_ids (array, optional) - Projects ids in array
    + users_ids (array, optional) - Users ids in array
    + events_types (array, optional) - Event types in array
    + order (string, optional) - Data order (desc or asc)
        + Default: desc
    + date_range (array, optional) - Date from and date to in array
    + tasks_ids (array, optional) - Tasks ids in array

+ Response 200 (application/json)

    + Attributes
    
        + event (object)
            + id: 69 (number) - ID of the event
            + date_action: `2021-05-26T04:59:20+00:00` (string) - date of the event in ISO 8601 format
            + type: task_finished (string) - string representation of the event type
            + author (object) -  event author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - fullname of the event author
            + who (object, optional) - second user in the event
                + id: 3 (number) - user ID
                + fullname: John Doe (string) - fullname of the user
            + comment (object, optional) - comment which belongs to the event
                + id: 12 (number) - comment ID
            + task (object, optional) - task which belongs to the event
                + id: 1 (number) - ID of the task
                + name: Task name (string) - name of the task
            + task_check (object, optional) - subtask which belong to the event
                + id: 54 (number) - ID of the subtask
                + name: Subtask name (string) - name of the subtask
            + tasklist (object, optional) - tasklist which belongs to the event
                + id: 426 (number) - ID of the tasklist
                + name: Marketing (string) - name of the tasklist
            + project (object) - project which belongs to the event
                + id: 69 (number) - ID of the project
                + name: Project name (string) - name of the project
            + document (object, optional) - document which belongs to the event
                + id: 112 (number) - ID of the document
                + name: Document name (string) - name of the document
            + file (object, optional) - file which belongs to the event
                + id: 25 (number) - ID of the file
                + filename: max_1352239.jpg (string) - name of the file
                + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the file
                + caption: My file (string) - caption of the file
            + due_date: `2022-06-12T14:21:16+02:00` (string, optional) - new due date for events of new task and due date change
            + due_date_end: null (string, optional) - new due date for events of new task and due date change
                
    + Body
    
            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "events": [
                        {
                            "id": 69,
                            "date_action": "2021-05-26T04:59:20+00:00",
                            "type": "task_finished",
                            "author": {
                                "id": 2,
                                "fullname": "Captain Freelo"
                            },
                            "who": null,
                            "comment": null,
                            "task": {
                                "id": 1,
                                "name": "Task name"
                            },
                            "tasklist": {
                                "id": 426,
                                "name": "Marketing"
                            },
                            "project": {
                                "id": 69,
                                "name": "Project name"
                            },
                            "document": null,
                            "file": null,
                        }
                    ]
                }
            }

# Group Files

## Download file [/file/{file_uuid}]

+ Parameters
    + file_uuid (string) - universally unique identifier of the file

### Download file [GET]

+ Response 200

        Raw data of the file
    
## Upload file [/file/upload]

### Upload file [POST]
You can use uuid of the uploaded file as <code>\<a data-freelo-uuid="uuid"\>caption\</a\></code> tag in [Create comment](/reference/comments/comments-collection/create-comment) content. 
Also in comment while [creating a task](/reference/tasks/tasks-collection/create-task). There is a limit of 100MB per file.

+ Request

    + Attributes
        + file (file)

+ Response 200

    + Attributes
        + uuid (string) - identifier of the uploaded file
    
## Items collection [/all-docs-and-files?projects_ids[]=1&type=directory]

### Paginated collection of all items [GET]
It returns items from your directories. There can be 4 types of item - directory, link, file and document. Files in comments are not part of this collection.


+ Parameters
    + projects_ids (array, optional) - Projects ids in array
    + type (string, optional) - Items type [directory|link|file|document]
    
+ Response 200 (application/json)

    + Attributes
    
        + item (object)
            + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the item
            + name (string) - name of the item
            + author (object) - item author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - fullname of the author
            + project (object) - project which belongs to the item
                + id: 69 (number) - ID of the project
                + name: Project name (string) - name of the project
            + directory_uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string) - universally unique identifier of the directory - if null, item is in root
            + date_add (string) - date of adding item in ISO 8601 format
            + order (number) - order in directory
            + type (string) - type of the item
            + filename: max_1352239.jpg (string) - name of the file - only in file type of the item
            + caption (string) - caption of the file - only in file type of the item
            + mime_type: image/png (string) - mime type of the file - only in file type of the item
            + extension: png (string) - extension of the file - only in file type of the item
            + size: 93461 (number) - size of the file or directory
            + color: #77787a (string) - color of the item
            + items_count (number) - number of item in directory - only in directory type of the item
            + link: https://www.freelo.io (string) - link address - only in link type of the item
            + link_type: string - type of the link  - only in link type of the item
            + note: string - note to the item
                
    + Body
    
            {
                "total": 1,
                "count": 1,
                "page": 0,
                "per_page": 100,
                "data": {
                    "items": [
                        {
                            "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                            "name": "Item name",
                            "author": {
                                "id": 2,
                                "fullname": "Captain Freelo"
                            },
                            "project": {
                                "id": 69,
                                "name": "Project name"
                            },
                            "directory_uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                            "date_add": "2021-10-07T09:09:42+02:00",
                            "order": 12,
                            "type": "file",
                            "filename": "file name",
                            "caption": "file caption",
                            "mime_type": "image/png",
                            "extension": "png",
                            "size": 93461,
                            "color": "#77787a",
                            "items_count": 0,
                            "link": null,
                            "link_type": null,
                            "note": null
                        }
                    ]
                }
            }
    
# Group States

## Find all states [/states]

### All states [GET]

+ Response 200 (application/json)

    + Attributes
    
        + state (object)
            + id: 1 (number) - ID of the state
            + state: `active` (string) - string representation of the state
                
    + Body
    
            {
                "states": [
                    {
                        "id": 1,
                        "state": "active"
                    }
                ]
            }

# Group Custom fields

## Custom fields types [/custom-field/get-types]

### Get custom fields types [GET]

+ Response 200 (application/json)

    + Attributes
    
        + custom_field_types (array)
            + uuid: `b1e56fa9-a97a-429b-8ab4-82bebe58933a` (string) - uuid of type
            + name: `number` (string) - name of type
 
    + Body 
    
            {
                "custom_field_types": [
                    {
                        "uuid": "b1e56fa9-a97a-429b-8ab4-82bebe58933a",
                        "name": "number"
                    }
                ]
            }

## Custom fields [/custom-field]

### Create custom field [POST /custom-field/create/{project_id}]

+ Parameters
    + project_id (number) - ID of the project

+ Request (application/json)

    + Attributes
        + uuid: `b52e341f-5e45-4567-9e2b-994931b7eb13` (string, optional) - Uuid of custom field
        + name: `Phone` (string, required) - Name of custom field
        + type (enum, required) - Type of custom field
            + `2f7bfe3a-c950-470e-b910-95b4caf5dc4f` (string) - Uuid for text type
            + `b1e56fa9-a97a-429b-8ab4-82bebe58933a` (string) - Uuid for number type
    + Body
    
            {
                "uuid":"b52e341f-5e45-4567-9e2b-994931b7eb13",
                "name":"Phone",
                "type":"2f7bfe3a-c950-470e-b910-95b4caf5dc4f"
            }
        
+ Response 200 (application/json)

    + Attributes
        + custom_field (object)
            + name: Phone (string) - Name of custom field
            + type: 2f7bfe3a-c950-470e-b910-95b4caf5dc4f (string) - Type of custom field
            + date_add: `2022-10-19T09:27:31+02:00` (string) - Date of adding custom field in ISO 8601 format
            + author_id: 11 (number) - Custom field author id
            + uuid: b52e341f-5e45-4567-9e2b-994931b7eb13 (string) - Uuid of custom field
            + project_id: 9 (number) - ID of the project
            
    + Body

            {
                "custom_field": {
                    "name": "Phone",
                    "type": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                    "date_add": "2022-10-19T09:27:31+02:00",
                    "author_id": 11,
                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                    "project_id": 9
                }
            }

### Rename custom field [POST /custom-field/rename/{uuid}]

+ Parameters
    + uuid (string) - Uuid of custom field

+ Request (application/json)

    + Attributes
        name: Email (string) - New name of custom field
        
    + Body
    
            {
                "name":"Email"
            }
        
+ Response 200 (application/json)

    + Attributes
        + custom_field (object)
            + name: Email (string) - New name of custom field
            + type: 2f7bfe3a-c950-470e-b910-95b4caf5dc4f (string) - Type of custom field
            + date_add: `2022-10-19T09:27:31+02:00` (string) - Date of adding custom field in ISO 8601 format
            + author_id: 11 (number) - Custom field author id
            + uuid: b52e341f-5e45-4567-9e2b-994931b7eb13 (string) - Uuid of custom field
            + project_id: 9 (number) - ID of the project
            
    + Body

            {
                "custom_field": {
                    "name": "Email",
                    "type": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                    "date_add": "2022-10-19T09:27:31+02:00",
                    "author_id": 11,
                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                    "project_id": 9
                }
            }

### Delete custom field [DELETE /custom-field/delete/{uuid}]

+ Parameters
    + uuid (string) - Uuid of custom field

+ Response 200 (application/json)
    
    + Attributes
        + result: success (string)
    
    + Body

            {
                "result": "success"
            }

### Restore custom field [POST /custom-field/restore/{uuid}]

+ Parameters
    + uuid (string) - Uuid of custom field

+ Response 200 (application/json)

    + Attributes
        + custom_field (object)
            + name: Email (string) - New name of custom field
            + type: 2f7bfe3a-c950-470e-b910-95b4caf5dc4f (string) - Type of custom field
            + date_add: `2022-10-19T09:27:31+02:00` (string) - Date of adding custom field in ISO 8601 format
            + author_id: 11 (number) - Custom field author id
            + uuid: b52e341f-5e45-4567-9e2b-994931b7eb13 (string) - Uuid of custom field
            + project_id: 9 (number) - ID of the project
            
    + Body

            {
                "custom_field": {
                    "name": "Email",
                    "type": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                    "date_add": "2022-10-19T09:27:31+02:00",
                    "author_id": 11,
                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                    "project_id": 9
                }
            }

## Values [/custom-field-values]

### Add or edit value [POST /custom-field/add-or-edit-value]

+ Request (application/json)

+ Attributes
    + custom_field_uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of custom field
    + task_id: 5 (number) - The id of the task to which you are assigning a value
    + value: "foo@email.cz" (string) - Value of custom field

+ Body

{
    "uuid":"b52e341f-5e45-4567-9e2b-994931b7eb13",
    "custom_field_uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
    "value":"foo@email.cz"
}

+ Response 200 (application/json)

+ Attributes
    + custom_field_value (object)
        + value: "foo@email.cz" (string) - Value of custom field
        + date_add: "2022-10-25T18:53:11+02:00" (string) - Date of adding value in ISO 8601 format
        + date_edited_at: null (string) - Date of editing value in ISO 8601 format
        + author_id: 11 (number) - Id of author
        + uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of value
        + task_id: 51 (number) - Id of task
        + custom_field_uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of custom field

+ Body

{
    "custom_field_value": {
        "value": "foo@email.cz",
        "date_add": "2022-10-25T18:53:11+02:00",
        "date_edited_at": null,
        "author_id": 11,
        "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
        "task_id": 51,
        "custom_field_uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13"
    }
}

### Assign or edit enum option [POST /custom-field/add-or-edit-enum-value]

+ Request (application/json)

+ Attributes
    + customFieldUuid: custom_field_uuid (string) - The UUID of the custom field.
    + task_id (number) - The id of the task to which you are assigning a value
    + value: uuid_of_enum_option (string) - Uuid of enum option

+ Response 200 (application/json)

+ Attributes
    + customFieldEnum (object)
        + uuid: "string" (string)
        + task_id: 123 (number)
        + custom_field_uuid: "string" (string)
        + value: "string" (string)
        + date_add: "string" (string)
        + date_edited_at: null (string)
        + author_id: 123 (number)

### Delete value [DELETE /custom-field/delete-value/{uuid}]

+ Parameters
    + uuid (string) - Uuid of custom field value
    
+ Response 200 (application/json)
    
    + Attributes
        +result: "success" (string)
        
    + Body

            {
                "result": "success"
            }

### Add value [POST /custom-field/add-value/{task_id}]

This endpoint is deprecated, use [Add or edit value](https://freelo.docs.apiary.io/#reference/custom-fields/values/add-or-edit-value) instead

+ Parameters
    + task_id (number) - The id of the task to which you are assigning a value

+ Request (application/json)

    + Attributes
        + uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string, optional) - Uuid of custom field value
        + custom_field_uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of custom field
        + value: "foo@email.cz" (string) - Value of custom field
        
    + Body

            {
                "uuid":"b52e341f-5e45-4567-9e2b-994931b7eb13",
                "custom_field_uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                "value":"foo@email.cz"
            }
    
+ Response 200 (application/json)

    + Attributes
        + custom_field_value (object)
            + value: "foo@email.cz" (string) - Value of custom field
            + date_add: "2022-10-25T18:53:11+02:00" (string) - Date of adding value in ISO 8601 format
            + date_edited_at: null (string) - Date of editing value in ISO 8601 format
            + author_id: 11 (number) - Id of author
            + uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of value
            + task_id: 51 (number) - Id of task
            + custom_field_uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of custom field

    + Body

            {
                "custom_field_value": {
                "value": "foo@email.cz",
                "date_add": "2022-10-25T18:53:11+02:00",
                "date_edited_at": null,
                "author_id": 11,
                "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                "task_id": 51,
                "custom_field_uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13"
                }
            }

### Change value [POST /custom-field/change-value/{uuid}]

This endpoint is deprecated, use [Add or edit value](https://freelo.docs.apiary.io/#reference/custom-fields/values/add-or-edit-value) instead

+ Parameters
    + uuid (string) - Uuid of custom field value

+ Request (application/json)

    + Attributes
        + value: "random@email.cz" (string) - new value of custom field
        
    + Body

            {
                value: "random@email.cz"
            }
    
+ Response 200 (application/json)

    + Attributes
        + custom_field_value (object)
            + value: "random@email.cz" (string) - Value of custom field
            + date_add: "2022-10-25T18:53:11+02:00" (string) - Date of adding value in ISO 8601 format
            + date_edited_at: "2022-10-25T19:02:43+02:00" (string) - Date of editing value in ISO 8601 format
            + author_id: 11 (number) - Id of author
            + uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of value
            + task_id: 51 (number) - Id of task
            + custom_field_uuid: "b52e341f-5e45-4567-9e2b-994931b7eb13" (string) - Uuid of custom field

    + Body

            {
                "custom_field_value": {
                    "value": "random@email.cz",
                    "date_add": "2022-10-25T18:53:11+02:00",
                    "date_edited_at": "2022-10-25T19:02:43+02:00",
                    "author_id": 11,
                    "uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13",
                    "task_id": 51,
                    "custom_field_uuid": "b52e341f-5e45-4567-9e2b-994931b7eb13"
                }
            }

### Assign enum option [POST /custom-field/add-enum-value/{task_id}]

This endpoint is deprecated, use [Assign or edit enum option](https://freelo.docs.apiary.io/#reference/custom-fields/values/assign-or-edit-enum-option) instead

+ Parameters
    + task_id (number) - The id of the task to which you are assigning a value

+ Request (application/json)

    + Attributes
        + customFieldUuid: custom_field_uuid (string) - The UUID of the custom field.
        + value: uuid_of_enum_option (string) - Uuid of enum option
        + uuid: uuid (string, optional) - If you send it, it will be new uuid, otherwise it will be randomly generated

+ Response 200 (application/json)

    + Attributes
         + customFieldEnum (object)
            + uuid: "string" (string)
            + task_id: 123 (number)
            + custom_field_uuid: "string" (string)
            + value: "string" (string)
            + date_add: "string" (string)
            + date_edited_at: null (string) 
            + author_id: 123 (number)

### Change enum option [POST /custom-field/change-enum-value/{uuid}]

This endpoint is deprecated, use [Assign or edit enum option](https://freelo.docs.apiary.io/#reference/custom-fields/values/assign-or-edit-enum-option) instead

+ Parameters
    + uuid (string) - Uuid of value that you want to change

+ Request (application/json)

    + Attributes
        + value: uuid_of_enum_option (string) - Uuid of enum option

+ Response 200 (application/json)

    + Attributes
         + customFieldEnum (object)
            + uuid: "string" (string)
            + task_id: 123 (number)
            + custom_field_uuid: "string" (string)
            + value: "string" (string)
            + date_add: "string" (string)
            + date_edited_at: null (string) 
            + author_id: 123 (number)

## Enums [/custom-field-enum]

Enums are special types of custom fields. Here's how to use them:
1. [Create custom field](https://freelo.docs.apiary.io/#reference/custom-fields/create-custom-field/create-custom-field) with enum type (uuid of enum type is 'f9729a8f-d340-40e4-b2c0-dc46c37e18ce')
2. [Create enum options](https://freelo.docs.apiary.io/#reference/custom-fields/enums/create-enum-option)
3. [Assign enum option](https://freelo.docs.apiary.io/#reference/custom-fields/values/assign-or-edit-enum-option) for task

To delete an enum option there are two endpoints:
* [Delete](https://freelo.docs.apiary.io/#reference/custom-fields/enums/delete-enum-option) - to delete an unused enum. If enum is used, this endpoint will return error.
* [Force delete](https://freelo.docs.apiary.io/#reference/custom-fields/enums/force-delete-enum-option) - this endpoint deletes the enum even if it is being used.

### Get enums options for Custom field [GET /custom-field-enum/get-for-custom-field/{custom_field_uuid}]

+ Parameters
    + custom_field_uuid (string) - The UUID of the custom field.
    
+ Response 200 (application/json)
    + Attributes
        + custom_field_enum (array)

            This is an array of custom field enum objects, each with the following attributes:
            
            + enum_uuid (string): The UUID of the custom field enum.
            + enum_value (string): The value associated with the custom field enum.
            + custom_field_uuid (string): The UUID of the custom field to which the enum is associated.
            + custom_field_name (string): The name of the custom field to which the enum is associated.

### Create enum option [POST /custom-field-enum/create/{custom_field_uuid}]

+ Parameters
    + custom_field_uuid (string) - The UUID of the custom field with enum type.

+ Request (application/json)

    + Attributes
        + uuid: uuid (string, optional) - Uuid of new enum option, if it's not set, it will be randomly generated
        + value: Monday (string) - Value of new enum option
        

+ Response 200 (application/json)

    + Attributes
        + custom_field_enum (object)
            + uuid: uuid (string) - The uuid of new enum option
            + value: Monday (string) - The value of new enum option


### Edit enum option [POST /custom-field-enum/change/{custom_field_enum_uuid}]

+ Parameters
    + custom_field_enum_uuid (string) - The UUID of the custom field enum.

+ Request (application/json)

    + Attributes
        + value: Tuesday (string) - The value of new enum option

+ Response 200 (application/json)

    + Attributes
        + custom_field_enum (object)
            + uuid: uuid (string) - The uuid of new enum option
            + value: Tuesday (string) - The value of new enum option

### Delete enum option [DELETE /custom-field-enum/delete/{custom_field_enum_uuid}]

+ Parameters
    + custom_field_enum_uuid: uuid (string) - The uuid of custom field enum option that you want to delete

+ Response 200 (application/json)

    + Attributes
        +result: "success" (string)

### Force delete enum option [DELETE /custom-field-enum/force-delete/{custom_field_enum_uuid}]

+ Parameters
    + custom_field_enum_uuid: uuid (string) - The uuid of custom field enum option that you want to delete

+ Response 200 (application/json)

    + Attributes
        +result: "success" (string)

## On project [/custom-field/find-by-project]

### Find custom fields by project ID [GET /custom-field/find-by-project/{project_id}]

+ Parameters
    + project_id (number) - ID of the project
    
+ Response 200 (application/json)

    + Attributes
        + custom_fields (array) - Array of custom fields on project
            + uuid: "133c3793-f5cc-4302-b20b-63db0365f87c" (string) - The uuid of the custom field
            + custom_fields_types_uuid: "2f7bfe3a-c950-470e-b910-95b4caf5dc4f" (string) - The uuid of type of the custom field
            + project_id: 9 (number) - Project ID
            + author_id: 11 (number) - Author ID
            + name: "CFA" (string) - Name of the custom field
            + date_add: "2022-07-28 11:25:27" (string) - Date of when the custom field was added in ISO 8601 format
            + priority: 0 (number) - Custom field priority
        + is_commander: true (boolean) - Is user project commander
    
    + Body

            {
                "custom_fields": [
                    {
                        "uuid": "133c3793-f5cc-4302-b20b-63db0365f87c",
                        "custom_fields_types_uuid": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                        "project_id": 9,
                        "author_id": 11,
                        "name": "CFA",
                        "date_add": "2022-07-28 11:25:27",
                        "priority": 0
                    },
                    {
                        "uuid": "233c3793-f5cc-4302-b20b-63db0365f87c",
                        "custom_fields_types_uuid": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                        "project_id": 9,
                        "author_id": 5,
                        "name": "CFB",
                        "date_add": "2022-07-28 11:25:58",
                        "priority": 1
                    }
                ],
                "is_commander": true
            }

# Group Custom filters

## Custom filter collections [/dashboard/custom-filters]

### Collection of custom filters [GET /dashboard/custom-filters]

+ Response 200 (application/json)

    + Attributes
        + filter (object)
            + uuid: `4c5fa4c0-debf-4509-8c3e-2c26011bc857` (string)
            + name: `My own with passed deadline` (string)
            + name_webalized: `my-own-with-passed-deadline` (string)

    + Body 

            [
                {
                    "uuid": "4c5fa4c0-debf-4509-8c3e-2c26011bc857",
                    "name": "My own with passed deadline",
                    "name_webalized": "my-own-with-passed-deadline"
                },
                {
                    "uuid": "24fa4db2-7d02-4647-be8a-2387b9375f4a",
                    "name": "Work in progress",
                    "name_webalized": "work-in-progress"
                }
            ]


## Tasks by custom filter [/dashboard/custom-filter/]
            
### Collection of tasks by custom filter UUID [GET /dashboard/custom-filter/by-uuid/{uuid}/tasks]

+ Parameters
    + uuid (string) - UUID of the custom filter

+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add: `2021-08-04T07:33:47+02:00` (string) - Date of adding task in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing task in ISO 8601 format
            + due_date: `2021-10-10T12:00:00+02:00` (string) - Due date of task in ISO 8601 format
            + due_date_end: `2021-10-15T12:00:00+02:00` (string) - Due date end of task in ISO 8601 format
            + parent_task_id: 4900 (number, nullable) - ID of parent task if the task is subtask, null otherwise
            + count_comments: 1 (number) - Number of comments in the task
            + count_subtasks: 1 (number) - Number of subtasks in the task
            + author (object) - task author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - Fullname of the task author
            + worker (object)
                + id: 1 (number) - ID of the worker
                + fullname: Karel Borkovec (string) - Fullname of the worker
            + state (object) - task state
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + project (object)
                + id: 8 (number) - ID of project
                + name: Project name (string) - Name of project
                + state (object) - project state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + tasklist (object)
                + id: 98 (number) - ID of the tasklist
                + name: Water the plants (string) - Name of the tasklist
                + state (object) - tasklist state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + custom_fields (array) - Array of custom fields
                + (object)
                    + field_uuid: `133c3793-f5cc-4302-b20b-63db0365f87c` (string) - Uuid of custom field
                    + custom_fields_types_uuid: `2f7bfe3a-c950-470e-b910-95b4caf5dc4f` (string) - Uuid of type of custom field
                    + project_id: 9 (number) - Uuid of project
                    + name: `CF` (string) - Name of custom field
                    + priority: 0 (number) - Priority of custom field
                    + field_date_add: `2022-07-28 11:25:27` (string) - Date when custom field was created
                    + value_uuid: `e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7` (string) - Uuid of value
                    + value_author_id: 11 (number) - Id of author of value
                    + value: `value` (string) - Value of custom field
                    + value_date_add: `2022-09-15 08:59:59` (string) - Date when value was created
                    + value_date_edited_at: null (string) - Date when value was edited
            + total_time_estimate (object)
                + minutes: 50 (number) - Number of total estimated minutes
            + user_time_estimates (array) - Array of worker time estimates
                + (object)
                    + minutes: 50 (number) - Estimated minutes for the worker
                    + user (object)
                        + id: 1 (number) - ID of the worker
                        + fullname: Karel Borkovec (string) - Fullname of the worker
                
            

    + Body 

            [
                {
                    "id": 4955,
                    "name": "Write PR article",
                    "date_add": "2021-08-04T07:33:47+02:00",
                    "date_edited_at": "2021-10-04T09:32:00+02:00",
                    "due_date": "2021-10-10T12:00:00+02:00",
                    "due_date_end": "2021-10-15T12:00:00+02:00",
                    "parent_task_id": 4900,
                    "count_subtasks": 0,
                    "count_comments": 14,
                    "author": {
                        "id": 2,
                        "name": "Captain Freelo"
                    },
                    "worker": {
                        "id": 1,
                        "name": "Karel Borkovec"
                    },
                    "state": {
                        "id": 1,
                        "state": "active"
                    },
                    "project": {
                        "id": 8,
                        "name": "Project name",
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    },
                    "tasklist": {
                        "id": 98,
                        "name": "Water the plants",
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    },
                    "labels": [
                        {
                            "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c",
                            "name": "in progress",
                            "color": "#f2830b"
                        }
                    ],
                    "custom_fields": [
                        {
                            "field_uuid": "133c3793-f5cc-4302-b20b-63db0365f87c",
                            "custom_fields_types_uuid": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                            "project_id": 9,
                            "name": "CF",
                            "priority": 0,
                            "field_date_add": "2022-07-28 11:25:27",
                            "value_uuid": "e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7",
                            "value_author_id": 11,
                            "value": "value",
                            "value_date_add": "2022-09-15 08:59:59",
                            "value_date_edited_at": null
                        }
                    ],
                    "total_time_estimate": null,
                    "users_time_estimates": []
                }
            ]
            

### Collection of tasks by custom filter name [GET /dashboard/custom-filter/by-name/{name_webalized}/tasks]

+ Parameters
    + name_webalized (string) - Webalized name of the custom filter

+ Response 200 (application/json)

    + Attributes
        + task (object)
            + id: 4955 (number) - ID of the task
            + name: Write PR article (string) - Name of the task
            + date_add: `2021-08-04T07:33:47+02:00` (string) - Date of adding task in ISO 8601 format
            + date_edited_at: `2021-10-04T09:32:00+02:00` (string) - Date of editing task in ISO 8601 format
            + due_date: `2021-10-10T12:00:00+02:00` (string) - Due date of task in ISO 8601 format
            + due_date_end: `2021-10-15T12:00:00+02:00` (string) - Due date end of task in ISO 8601 format
            + parent_task_id: 4900 (number, nullable) - ID of parent task if the task is subtask, null otherwise
            + count_comments: 1 (number) - Number of comments in the task
            + count_subtasks: 1 (number) - Number of subtasks in the task
            + author (object) - task author
                + id: 2 (number) - author ID
                + fullname: Captain Freelo (string) - Fullname of the task author
            + worker (object)
                + id: 1 (number) - ID of the worker
                + fullname: Karel Borkovec (string) - Fullname of the worker
            + state (object) - task state
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + project (object)
                + id: 8 (number) - ID of project
                + name: Project name (string) - Name of project
                + state (object) - project state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + tasklist (object)
                + id: 98 (number) - ID of the tasklist
                + name: Water the plants (string) - Name of the tasklist
                + state (object) - tasklist state
                    + id: 1 (number) - ID of state
                    + state: `active` (string) - string representation of state
            + labels (array) - Array of labels
                + (object)
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                    + name: in progress (string)
                    + color: #f2830b (string)
            + custom_fields (array) - Array of custom fields
                + (object)
                    + field_uuid: `133c3793-f5cc-4302-b20b-63db0365f87c` (string) - Uuid of custom field
                    + custom_fields_types_uuid: `2f7bfe3a-c950-470e-b910-95b4caf5dc4f` (string) - Uuid of type of custom field
                    + project_id: 9 (number) - Uuid of project
                    + name: `CF` (string) - Name of custom field
                    + priority: 0 (number) - Priority of custom field
                    + field_date_add: `2022-07-28 11:25:27` (string) - Date when custom field was created
                    + value_uuid: `e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7` (string) - Uuid of value
                    + value_author_id: 11 (number) - Id of author of value
                    + value: `value` (string) - Value of custom field
                    + value_date_add: `2022-09-15 08:59:59` (string) - Date when value was created
                    + value_date_edited_at: null (string) - Date when value was edited
            + total_time_estimate (object)
                + minutes: 50 (number) - Number of total estimated minutes
            + user_time_estimates (array) - Array of worker time estimates
                + (object)
                    + minutes: 50 (number) - Estimated minutes for the worker
                    + user (object)
                        + id: 1 (number) - ID of the worker
                        + fullname: Karel Borkovec (string) - Fullname of the worker

    + Body 

            [
                {
                    "id": 4955,
                    "name": "Write PR article",
                    "date_add": "2021-08-04T07:33:47+02:00",
                    "date_edited_at": "2021-10-04T09:32:00+02:00",
                    "due_date": "2021-10-10T12:00:00+02:00",
                    "due_date_end": "2021-10-15T12:00:00+02:00",
                    "parent_task_id": 4900,
                    "count_subtasks": 0,
                    "count_comments": 14,
                    "author": {
                        "id": 2,
                        "name": "Captain Freelo"
                    },
                    "worker": {
                        "id": 1,
                        "name": "Karel Borkovec"
                    },
                    "state": {
                        "id": 1,
                        "state": "active"
                    },
                    "project": {
                        "id": 8,
                        "name": "Project name",
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    },
                    "tasklist": {
                        "id": 98,
                        "name": "Water the plants",
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    },
                    "labels": [
                        {
                            "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c",
                            "name": "in progress",
                            "color": "#f2830b"
                        }
                    ],
                    "custom_fields": [
                        {
                            "field_uuid": "133c3793-f5cc-4302-b20b-63db0365f87c",
                            "custom_fields_types_uuid": "2f7bfe3a-c950-470e-b910-95b4caf5dc4f",
                            "project_id": 9,
                            "name": "CF",
                            "priority": 0,
                            "field_date_add": "2022-07-28 11:25:27",
                            "value_uuid": "e56e4be9-9c3d-4cdc-a43f-2d65e11a81b7",
                            "value_author_id": 11,
                            "value": "value",
                            "value_date_add": "2022-09-15 08:59:59",
                            "value_date_edited_at": null
                        }
                    ],
                    "total_time_estimate": null,
                    "users_time_estimates": []
                }
            ]

# Group Notes

### Create note [POST /project/{project_id}/note]

+ Parameters
    + project_id (number) - ID of the project

+ Request (application/json)

    + Attributes
        + name: `My note` (string, required) - Name of note
        + content: `Note content ...` (string, optional) - Content of note
    + Body
    
            {
                "name":"My note",
                "content":"Note content ..."
            }
        
+ Response 200 (application/json)

    + Attributes
        + note (object)
            + id: 34 (number) - ID of the Note
            + name: My note (string) - Name of note
            + date_add: `2022-10-19T09:27:31+02:00` (string) - Date of adding note in ISO 8601 format
            + date_edited_at: `2022-10-19T09:27:31+02:00` (string) - Date of editing note in ISO 8601 format
            + state (object)
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + content: `<p>Note content ...</p>` (string) - Content of note
            + author (object)
                + id: 2 (number) - ID of author
                + fullname: Captain Freelo (string) - Fullname of the note author
            + project (object)
                + id: 8 (number) - ID of project
                + name: Project name (string) - Name of project
            + files (array) - Array of files
                + (object)
                    + id: 32 (number) - ID of the file
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string) - UUID of the file
                    + filename: max_1352239.jpg (string) - Name of the file
                    + caption: My photo (string) - Caption of the file
                    + description: Photo of nature (string) - Description of the file
                    + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                    + size: 93461 (number) - Filesize of the file
                    + state (object)
                        + id: 1 (number) - ID of state
                        + state: `active` (string) - string representation of state
            + comments (array) - Array of comments
                + (object)
                    + id: 36012 (number) - ID of the comment
                    + content: <p>There are ...</p> (string) - Comment content
                    + date_add: `2022-08-10T08:19:46+02:00` (string) - Date of adding comment in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing comment in ISO 8601 format
                    + files (array) - Array of files in comment
                        + (object)
                            + id: 32 (number) - ID of the file
                            + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                            + filename: max_1352239.jpg (string) - name of the file
                            + caption: My photo (string) - caption of the file
                            + description: Photo of nature (string) - description of the file
                            + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                            + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                            + size: 93461 (number) - Filesize of the file
                            + state (object)
                                + id: 1 (number) - ID of state
                                + state: `active` (string) - string representation of state
                    + author (object)
                        + id: 2 (number) - ID of the author
                        + fullname: Captain Freelo (string) - Fullname of the author
    + Body

            {
                "id": 34,
                "name": "My note",
                "date_add": "2022-10-19T09:27:31+02:00",
                "date_edited_at": "2022-10-19T09:27:31+02:00",
                "state": {
                    "id": 1,
                    "state": "active"
                },
                "content": "<p>Note content ...</p>",
                "author": {
                    "id": 2,
                    "fullname": "Captain Freelo"
                },
                "project": {
                    "id": 8,
                    "name": "Project name"
                },
                "files": [
                    {
                        "id": 32,
                        "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c",
                        "filename": "max_1352239.jpg",
                        "caption": "My photo",
                        "description": "Photo of nature",
                        "date_add": "2022-08-04T07:34:47+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "size": 93461,
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    }
                ],
                "comments": [
                    {
                        "id": 36012,
                        "content": "<p>There are ...</p>",
                        "date_add": "2022-08-10T08:19:46+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "files": [
                            {
                                "id": 53,
                                "uuid": "7786b8fb-1af2-4d91-a002-035f09a27089",
                                "filename": "max_135221.jpg",
                                "caption": "My photo",
                                "description": "Photo of nature",
                                "date_add": "2022-05-04T07:34:47+02:00",
                                "date_edited_at": "2022-06-04T07:40:47+02:00",
                                "size": 96347,
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            }
                        ],
                        "author": {
                            "id": 2,
                            "fullname": "Captain Freelo"
                        }
                    }
                ]
            }


## Note [/note/{note_id}]

### Get note [GET]

+ Parameters
    + note_id (number) - ID of the note

+ Response 200 (application/json)

    + Attributes
        + note (object)
            + id: 34 (number) - ID of the Note
            + name: My note (string) - Name of note
            + date_add: `2022-10-19T09:27:31+02:00` (string) - Date of adding note in ISO 8601 format
            + date_edited_at: `2022-10-19T09:27:31+02:00` (string) - Date of editing note in ISO 8601 format
            + state (object)
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + content: `<p>Note content ...</p>` (string) - Content of note
            + author (object)
                + id: 2 (number) - ID of author
                + fullname: Captain Freelo (string) - Fullname of the note author
            + project (object)
                + id: 8 (number) - ID of project
                + name: Project name (string) - Name of project
            + files (array) - Array of files
                + (object)
                    + id: 32 (number) - ID of the file
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string) - UUID of the file
                    + filename: max_1352239.jpg (string) - Name of the file
                    + caption: My photo (string) - Caption of the file
                    + description: Photo of nature (string) - Description of the file
                    + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                    + size: 93461 (number) - Filesize of the file
                    + state (object)
                        + id: 1 (number) - ID of state
                        + state: `active` (string) - string representation of state
            + comments (array) - Array of comments
                + (object)
                    + id: 36012 (number) - ID of the comment
                    + content: <p>There are ...</p> (string) - Comment content
                    + date_add: `2022-08-10T08:19:46+02:00` (string) - Date of adding comment in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing comment in ISO 8601 format
                    + files (array) - Array of files in comment
                        + (object)
                            + id: 32 (number) - ID of the file
                            + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                            + filename: max_1352239.jpg (string) - name of the file
                            + caption: My photo (string) - caption of the file
                            + description: Photo of nature (string) - description of the file
                            + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                            + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                            + size: 93461 (number) - Filesize of the file
                            + state (object)
                                + id: 1 (number) - ID of state
                                + state: `active` (string) - string representation of state
                    + author (object)
                        + id: 2 (number) - ID of the author
                        + fullname: Captain Freelo (string) - Fullname of the author
    + Body
    
            {
                "id": 34,
                "name": "My note",
                "date_add": "2022-10-19T09:27:31+02:00",
                "date_edited_at": "2022-10-19T09:27:31+02:00",
                "state": {
                    "id": 1,
                    "state": "active"
                },
                "content": "<p>Note content ...</p>",
                "author": {
                    "id": 2,
                    "fullname": "Captain Freelo"
                },
                "project": {
                    "id": 8,
                    "name": "Project name"
                },
                "files": [
                    {
                        "id": 32,
                        "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c",
                        "filename": "max_1352239.jpg",
                        "caption": "My photo",
                        "description": "Photo of nature",
                        "date_add": "2022-08-04T07:34:47+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "size": 93461,
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    }
                ],
                "comments": [
                    {
                        "id": 36012,
                        "content": "<p>There are ...</p>",
                        "date_add": "2022-08-10T08:19:46+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "files": [
                            {
                                "id": 53,
                                "uuid": "7786b8fb-1af2-4d91-a002-035f09a27089",
                                "filename": "max_135221.jpg",
                                "caption": "My photo",
                                "description": "Photo of nature",
                                "date_add": "2022-05-04T07:34:47+02:00",
                                "date_edited_at": "2022-06-04T07:40:47+02:00",
                                "size": 96347,
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            }
                        ],
                        "author": {
                            "id": 2,
                            "fullname": "Captain Freelo"
                        }
                    }
                ]
            }


### Edit note [POST]


+ Parameters
    + note_id (number) - ID of the note
    
+ Request (application/json)

    + Attributes
        + name: `My note` (string, required) - Name of note
        + content: `Note content ...` (string, optional) - Content of note
    + Body
    
            {
                "name":"My note",
                "content":"Note content ..."
            }

+ Response 200 (application/json)

    + Attributes
        + note (object)
            + id: 34 (number) - ID of the Note
            + name: My note (string) - Name of note
            + date_add: `2022-10-19T09:27:31+02:00` (string) - Date of adding note in ISO 8601 format
            + date_edited_at: `2022-10-19T09:27:31+02:00` (string) - Date of editing note in ISO 8601 format
            + state (object)
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + content: `<p>Note content ...</p>` (string) - Content of note
            + author (object)
                + id: 2 (number) - ID of author
                + fullname: Captain Freelo (string) - Fullname of the note author
            + project (object)
                + id: 8 (number) - ID of project
                + name: Project name (string) - Name of project
            + files (array) - Array of files
                + (object)
                    + id: 32 (number) - ID of the file
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string) - UUID of the file
                    + filename: max_1352239.jpg (string) - Name of the file
                    + caption: My photo (string) - Caption of the file
                    + description: Photo of nature (string) - Description of the file
                    + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                    + size: 93461 (number) - Filesize of the file
                    + state (object)
                        + id: 1 (number) - ID of state
                        + state: `active` (string) - string representation of state
            + comments (array) - Array of comments
                + (object)
                    + id: 36012 (number) - ID of the comment
                    + content: <p>There are ...</p> (string) - Comment content
                    + date_add: `2022-08-10T08:19:46+02:00` (string) - Date of adding comment in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing comment in ISO 8601 format
                    + files (array) - Array of files in comment
                        + (object)
                            + id: 32 (number) - ID of the file
                            + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                            + filename: max_1352239.jpg (string) - name of the file
                            + caption: My photo (string) - caption of the file
                            + description: Photo of nature (string) - description of the file
                            + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                            + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                            + size: 93461 (number) - Filesize of the file
                            + state (object)
                                + id: 1 (number) - ID of state
                                + state: `active` (string) - string representation of state
                    + author (object)
                        + id: 2 (number) - ID of the author
                        + fullname: Captain Freelo (string) - Fullname of the author
    + Body
    
            {
                "id": 34,
                "name": "My note",
                "date_add": "2022-10-19T09:27:31+02:00",
                "date_edited_at": "2022-10-19T09:27:31+02:00",
                "state": {
                    "id": 1,
                    "state": "active"
                },
                "content": "<p>Note content ...</p>",
                "author": {
                    "id": 2,
                    "fullname": "Captain Freelo"
                },
                "project": {
                    "id": 8,
                    "name": "Project name"
                },
                "files": [
                    {
                        "id": 32,
                        "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c",
                        "filename": "max_1352239.jpg",
                        "caption": "My photo",
                        "description": "Photo of nature",
                        "date_add": "2022-08-04T07:34:47+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "size": 93461,
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    }
                ],
                "comments": [
                    {
                        "id": 36012,
                        "content": "<p>There are ...</p>",
                        "date_add": "2022-08-10T08:19:46+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "files": [
                            {
                                "id": 53,
                                "uuid": "7786b8fb-1af2-4d91-a002-035f09a27089",
                                "filename": "max_135221.jpg",
                                "caption": "My photo",
                                "description": "Photo of nature",
                                "date_add": "2022-05-04T07:34:47+02:00",
                                "date_edited_at": "2022-06-04T07:40:47+02:00",
                                "size": 96347,
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            }
                        ],
                        "author": {
                            "id": 2,
                            "fullname": "Captain Freelo"
                        }
                    }
                ]
            }

        
### Delete note [DELETE]

+ Parameters
    + note_id (number) - ID of the note

+ Response 200 (application/json)

    + Attributes
        + note (object)
            + id: 34 (number) - ID of the Note
            + name: My note (string) - Name of note
            + date_add: `2022-10-19T09:27:31+02:00` (string) - Date of adding note in ISO 8601 format
            + date_edited_at: `2022-10-19T09:27:31+02:00` (string) - Date of editing note in ISO 8601 format
            + state (object)
                + id: 1 (number) - ID of state
                + state: `active` (string) - string representation of state
            + content: `<p>Note content ...</p>` (string) - Content of note
            + author (object)
                + id: 2 (number) - ID of author
                + fullname: Captain Freelo (string) - Fullname of the note author
            + project (object)
                + id: 8 (number) - ID of project
                + name: Project name (string) - Name of project
            + files (array) - Array of files
                + (object)
                    + id: 32 (number) - ID of the file
                    + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string) - UUID of the file
                    + filename: max_1352239.jpg (string) - Name of the file
                    + caption: My photo (string) - Caption of the file
                    + description: Photo of nature (string) - Description of the file
                    + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                    + size: 93461 (number) - Filesize of the file
                    + state (object)
                        + id: 1 (number) - ID of state
                        + state: `active` (string) - string representation of state
            + comments (array) - Array of comments
                + (object)
                    + id: 36012 (number) - ID of the comment
                    + content: <p>There are ...</p> (string) - Comment content
                    + date_add: `2022-08-10T08:19:46+02:00` (string) - Date of adding comment in ISO 8601 format
                    + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing comment in ISO 8601 format
                    + files (array) - Array of files in comment
                        + (object)
                            + id: 32 (number) - ID of the file
                            + uuid: `39bb2869-4e84-4e85-a11f-555567d0939c` (string)
                            + filename: max_1352239.jpg (string) - name of the file
                            + caption: My photo (string) - caption of the file
                            + description: Photo of nature (string) - description of the file
                            + date_add: `2022-08-04T07:34:47+02:00` (string) - Date of adding file in ISO 8601 format
                            + date_edited_at: `2022-08-04T07:40:47+02:00` (string) - Date of editing file in ISO 8601 format
                            + size: 93461 (number) - Filesize of the file
                            + state (object)
                                + id: 1 (number) - ID of state
                                + state: `active` (string) - string representation of state
                    + author (object)
                        + id: 2 (number) - ID of the author
                        + fullname: Captain Freelo (string) - Fullname of the author
    + Body

            {
                "id": 34,
                "name": "My note",
                "date_add": "2022-10-19T09:27:31+02:00",
                "date_edited_at": "2022-10-19T09:27:31+02:00",
                "state": {
                    "id": 4,
                    "state": "deleted"
                },
                "content": "<p>Note content ...</p>",
                "author": {
                    "id": 2,
                    "fullname": "Captain Freelo"
                },
                "project": {
                    "id": 8,
                    "name": "Project name"
                },
                "files": [
                    {
                        "id": 32,
                        "uuid": "39bb2869-4e84-4e85-a11f-555567d0939c",
                        "filename": "max_1352239.jpg",
                        "caption": "My photo",
                        "description": "Photo of nature",
                        "date_add": "2022-08-04T07:34:47+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "size": 93461,
                        "state": {
                            "id": 1,
                            "state": "active"
                        }
                    }
                ],
                "comments": [
                    {
                        "id": 36012,
                        "content": "<p>There are ...</p>",
                        "date_add": "2022-08-10T08:19:46+02:00",
                        "date_edited_at": "2022-08-04T07:40:47+02:00",
                        "files": [
                            {
                                "id": 53,
                                "uuid": "7786b8fb-1af2-4d91-a002-035f09a27089",
                                "filename": "max_135221.jpg",
                                "caption": "My photo",
                                "description": "Photo of nature",
                                "date_add": "2022-05-04T07:34:47+02:00",
                                "date_edited_at": "2022-06-04T07:40:47+02:00",
                                "size": 96347,
                                "state": {
                                    "id": 1,
                                    "state": "active"
                                }
                            }
                        ],
                        "author": {
                            "id": 2,
                            "fullname": "Captain Freelo"
                        }
                    }
                ]
            }
            
# Group Search

## Elasticsearch [/search]

### Search using elasticsearch [POST]

+ Request (application/json)

    + Attributes
        + search_query (object, required)
            + search_query: repair the ship (string, required) - What to search for
            + projects_ids: 30, 50 (array[number], optional) - IDs of projects to which the items belong 
            + tasklists_ids: 400, 500 (array[number], optional) - IDs of tasklists to which the items belong
            + tasks_ids: 600, 700 (array[number], optional) - IDs of tasks to which the items belong
            + authors_ids: 670, 3050 (array[number], optional) - IDs of item authors
            + workers_ids: 200, 300 (array[number], optional) - IDs of workers to which the items belong
            + state_ids (array[string], optional) - States in which the items are
                - active
                - archived
                - finished
                - template
                - not_template
                - archived_finished
                - archived_unfinished
                + Default: active
            + lang: `cs_cz` (string, optional) - Language of the item
            + due_date (object, optional) - Due date range of the item
                + date_from: `2023-09-25` (string, optional)
                + date_to: `2024-06-01` (string, optional)
            + entity_type: `task` (enum, optional) - Type of the item
                - task
                - subtask
                - project
                - tasklist
                - file
                - comment
            + page: 0 (number, optional) - Page number of the result
                + Default: 0
            + limit: 100 (number, optional) - Max number of results per page
                + Default: 100

    + Body

            {
                "search_query": "repair the ship",
                "state_ids": [
                    "active",
                    "finished",
                    "archived"
                ],
                "page": 0,
                "limit": 100
            }

+ Response 200 (application/json)

    + Attributes
        + item (array)
            + score: 2 (number, required) - Elasticsearch search match score for this item
            + id: 157194 (number, required) - ID of the item
            + uuid: `bef8f945-6cdc-43b0-a9d7-5e1c1adb7f97` (string, nullable) - UUID of the item
            + name: `We have to repair the ship` (string) - Name of the item
            + author_id: 2118 (number, required) - ID of the author
            
    + Body 
    
            {
                "total": 2,
                "count": 100,
                "page": 0,
                "per_page": 100,
                "data": {
                    "items": [
                        {
                            "score": 57.562523,
                            "id": 157194,
                            "uuid": null,
                            "name": "We have to repair the ship",
                            "author_id": 2118,
                            "type": "task",
                            "highlight_name": [
                                "We have to <em>repair</em> <em>the</em> <em>ship</em>"
                            ],
                            "highlight_content": [],
                            "project": {
                                "id": 2621,
                                "name": "Test project"
                            },
                            "tasklist": {
                                "id": 11053,
                                "name": "Things to repair"
                            },
                            "state": 1,
                            "is_smart": false
                        },
                        {
                            "score": 31.851616,
                            "id": 11053,
                            "uuid": null,
                            "name": "Things to repair",
                            "author_id": 2118,
                            "type": "tasklist",
                            "highlight_name": [
                                "Things to <em>repair</em>"
                            ],
                            "highlight_content": [],
                            "project": {
                                "id": 2621,
                                "name": "Test project"
                            },
                            "tasklist": {
                                "id": 11053,
                                "name": "Things to repair"
                            },
                            "state": 1
                        }
                    ]
                }
            }